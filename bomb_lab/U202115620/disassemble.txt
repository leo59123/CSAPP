
bomb：     文件格式 elf32-i386


Disassembly of section .init:

080486f4 <_init>:
 80486f4:	53                   	push   %ebx
 80486f5:	83 ec 08             	sub    $0x8,%esp
 80486f8:	e8 13 02 00 00       	call   8048910 <__x86.get_pc_thunk.bx>
 80486fd:	81 c3 03 39 00 00    	add    $0x3903,%ebx
 8048703:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048709:	85 c0                	test   %eax,%eax
 804870b:	74 05                	je     8048712 <_init+0x1e>
 804870d:	e8 be 01 00 00       	call   80488d0 <__gmon_start__@plt>
 8048712:	83 c4 08             	add    $0x8,%esp
 8048715:	5b                   	pop    %ebx
 8048716:	c3                   	ret    

Disassembly of section .plt:

08048720 <.plt>:
 8048720:	ff 35 04 c0 04 08    	pushl  0x804c004
 8048726:	ff 25 08 c0 04 08    	jmp    *0x804c008
 804872c:	00 00                	add    %al,(%eax)
	...

08048730 <read@plt>:
 8048730:	ff 25 0c c0 04 08    	jmp    *0x804c00c
 8048736:	68 00 00 00 00       	push   $0x0
 804873b:	e9 e0 ff ff ff       	jmp    8048720 <.plt>

08048740 <fflush@plt>:
 8048740:	ff 25 10 c0 04 08    	jmp    *0x804c010
 8048746:	68 08 00 00 00       	push   $0x8
 804874b:	e9 d0 ff ff ff       	jmp    8048720 <.plt>

08048750 <fgets@plt>:
 8048750:	ff 25 14 c0 04 08    	jmp    *0x804c014
 8048756:	68 10 00 00 00       	push   $0x10
 804875b:	e9 c0 ff ff ff       	jmp    8048720 <.plt>

08048760 <signal@plt>:
 8048760:	ff 25 18 c0 04 08    	jmp    *0x804c018
 8048766:	68 18 00 00 00       	push   $0x18
 804876b:	e9 b0 ff ff ff       	jmp    8048720 <.plt>

08048770 <sleep@plt>:
 8048770:	ff 25 1c c0 04 08    	jmp    *0x804c01c
 8048776:	68 20 00 00 00       	push   $0x20
 804877b:	e9 a0 ff ff ff       	jmp    8048720 <.plt>

08048780 <alarm@plt>:
 8048780:	ff 25 20 c0 04 08    	jmp    *0x804c020
 8048786:	68 28 00 00 00       	push   $0x28
 804878b:	e9 90 ff ff ff       	jmp    8048720 <.plt>

08048790 <__stack_chk_fail@plt>:
 8048790:	ff 25 24 c0 04 08    	jmp    *0x804c024
 8048796:	68 30 00 00 00       	push   $0x30
 804879b:	e9 80 ff ff ff       	jmp    8048720 <.plt>

080487a0 <strcpy@plt>:
 80487a0:	ff 25 28 c0 04 08    	jmp    *0x804c028
 80487a6:	68 38 00 00 00       	push   $0x38
 80487ab:	e9 70 ff ff ff       	jmp    8048720 <.plt>

080487b0 <getenv@plt>:
 80487b0:	ff 25 2c c0 04 08    	jmp    *0x804c02c
 80487b6:	68 40 00 00 00       	push   $0x40
 80487bb:	e9 60 ff ff ff       	jmp    8048720 <.plt>

080487c0 <puts@plt>:
 80487c0:	ff 25 30 c0 04 08    	jmp    *0x804c030
 80487c6:	68 48 00 00 00       	push   $0x48
 80487cb:	e9 50 ff ff ff       	jmp    8048720 <.plt>

080487d0 <__memmove_chk@plt>:
 80487d0:	ff 25 34 c0 04 08    	jmp    *0x804c034
 80487d6:	68 50 00 00 00       	push   $0x50
 80487db:	e9 40 ff ff ff       	jmp    8048720 <.plt>

080487e0 <exit@plt>:
 80487e0:	ff 25 38 c0 04 08    	jmp    *0x804c038
 80487e6:	68 58 00 00 00       	push   $0x58
 80487eb:	e9 30 ff ff ff       	jmp    8048720 <.plt>

080487f0 <__libc_start_main@plt>:
 80487f0:	ff 25 3c c0 04 08    	jmp    *0x804c03c
 80487f6:	68 60 00 00 00       	push   $0x60
 80487fb:	e9 20 ff ff ff       	jmp    8048720 <.plt>

08048800 <write@plt>:
 8048800:	ff 25 40 c0 04 08    	jmp    *0x804c040
 8048806:	68 68 00 00 00       	push   $0x68
 804880b:	e9 10 ff ff ff       	jmp    8048720 <.plt>

08048810 <__isoc99_sscanf@plt>:
 8048810:	ff 25 44 c0 04 08    	jmp    *0x804c044
 8048816:	68 70 00 00 00       	push   $0x70
 804881b:	e9 00 ff ff ff       	jmp    8048720 <.plt>

08048820 <fopen@plt>:
 8048820:	ff 25 48 c0 04 08    	jmp    *0x804c048
 8048826:	68 78 00 00 00       	push   $0x78
 804882b:	e9 f0 fe ff ff       	jmp    8048720 <.plt>

08048830 <__errno_location@plt>:
 8048830:	ff 25 4c c0 04 08    	jmp    *0x804c04c
 8048836:	68 80 00 00 00       	push   $0x80
 804883b:	e9 e0 fe ff ff       	jmp    8048720 <.plt>

08048840 <__printf_chk@plt>:
 8048840:	ff 25 50 c0 04 08    	jmp    *0x804c050
 8048846:	68 88 00 00 00       	push   $0x88
 804884b:	e9 d0 fe ff ff       	jmp    8048720 <.plt>

08048850 <socket@plt>:
 8048850:	ff 25 54 c0 04 08    	jmp    *0x804c054
 8048856:	68 90 00 00 00       	push   $0x90
 804885b:	e9 c0 fe ff ff       	jmp    8048720 <.plt>

08048860 <__fprintf_chk@plt>:
 8048860:	ff 25 58 c0 04 08    	jmp    *0x804c058
 8048866:	68 98 00 00 00       	push   $0x98
 804886b:	e9 b0 fe ff ff       	jmp    8048720 <.plt>

08048870 <gethostbyname@plt>:
 8048870:	ff 25 5c c0 04 08    	jmp    *0x804c05c
 8048876:	68 a0 00 00 00       	push   $0xa0
 804887b:	e9 a0 fe ff ff       	jmp    8048720 <.plt>

08048880 <strtol@plt>:
 8048880:	ff 25 60 c0 04 08    	jmp    *0x804c060	
 8048886:	68 a8 00 00 00       	push   $0xa8
 804888b:	e9 90 fe ff ff       	jmp    8048720 <.plt>

08048890 <connect@plt>:
 8048890:	ff 25 64 c0 04 08    	jmp    *0x804c064
 8048896:	68 b0 00 00 00       	push   $0xb0
 804889b:	e9 80 fe ff ff       	jmp    8048720 <.plt>

080488a0 <close@plt>:
 80488a0:	ff 25 68 c0 04 08    	jmp    *0x804c068
 80488a6:	68 b8 00 00 00       	push   $0xb8
 80488ab:	e9 70 fe ff ff       	jmp    8048720 <.plt>

080488b0 <__ctype_b_loc@plt>:
 80488b0:	ff 25 6c c0 04 08    	jmp    *0x804c06c
 80488b6:	68 c0 00 00 00       	push   $0xc0
 80488bb:	e9 60 fe ff ff       	jmp    8048720 <.plt>

080488c0 <__sprintf_chk@plt>:
 80488c0:	ff 25 70 c0 04 08    	jmp    *0x804c070
 80488c6:	68 c8 00 00 00       	push   $0xc8
 80488cb:	e9 50 fe ff ff       	jmp    8048720 <.plt>

Disassembly of section .plt.got:

080488d0 <__gmon_start__@plt>:
 80488d0:	ff 25 fc bf 04 08    	jmp    *0x804bffc
 80488d6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

080488e0 <_start>:
 80488e0:	31 ed                	xor    %ebp,%ebp
 80488e2:	5e                   	pop    %esi
 80488e3:	89 e1                	mov    %esp,%ecx
 80488e5:	83 e4 f0             	and    $0xfffffff0,%esp
 80488e8:	50                   	push   %eax
 80488e9:	54                   	push   %esp
 80488ea:	52                   	push   %edx
 80488eb:	68 80 9e 04 08       	push   $0x8049e80
 80488f0:	68 20 9e 04 08       	push   $0x8049e20
 80488f5:	51                   	push   %ecx
 80488f6:	56                   	push   %esi
 80488f7:	68 db 89 04 08       	push   $0x80489db
 80488fc:	e8 ef fe ff ff       	call   80487f0 <__libc_start_main@plt>
 8048901:	f4                   	hlt    
 8048902:	66 90                	xchg   %ax,%ax
 8048904:	66 90                	xchg   %ax,%ax
 8048906:	66 90                	xchg   %ax,%ax
 8048908:	66 90                	xchg   %ax,%ax
 804890a:	66 90                	xchg   %ax,%ax
 804890c:	66 90                	xchg   %ax,%ax
 804890e:	66 90                	xchg   %ax,%ax

08048910 <__x86.get_pc_thunk.bx>:
 8048910:	8b 1c 24             	mov    (%esp),%ebx
 8048913:	c3                   	ret    
 8048914:	66 90                	xchg   %ax,%ax
 8048916:	66 90                	xchg   %ax,%ax
 8048918:	66 90                	xchg   %ax,%ax
 804891a:	66 90                	xchg   %ax,%ax
 804891c:	66 90                	xchg   %ax,%ax
 804891e:	66 90                	xchg   %ax,%ax

08048920 <deregister_tm_clones>:
 8048920:	b8 a3 c3 04 08       	mov    $0x804c3a3,%eax
 8048925:	2d a0 c3 04 08       	sub    $0x804c3a0,%eax
 804892a:	83 f8 06             	cmp    $0x6,%eax
 804892d:	76 1a                	jbe    8048949 <deregister_tm_clones+0x29>
 804892f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048934:	85 c0                	test   %eax,%eax
 8048936:	74 11                	je     8048949 <deregister_tm_clones+0x29>
 8048938:	55                   	push   %ebp
 8048939:	89 e5                	mov    %esp,%ebp
 804893b:	83 ec 14             	sub    $0x14,%esp
 804893e:	68 a0 c3 04 08       	push   $0x804c3a0
 8048943:	ff d0                	call   *%eax
 8048945:	83 c4 10             	add    $0x10,%esp
 8048948:	c9                   	leave  
 8048949:	f3 c3                	repz ret 
 804894b:	90                   	nop
 804894c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048950 <register_tm_clones>:
 8048950:	b8 a0 c3 04 08       	mov    $0x804c3a0,%eax
 8048955:	2d a0 c3 04 08       	sub    $0x804c3a0,%eax
 804895a:	c1 f8 02             	sar    $0x2,%eax
 804895d:	89 c2                	mov    %eax,%edx
 804895f:	c1 ea 1f             	shr    $0x1f,%edx
 8048962:	01 d0                	add    %edx,%eax
 8048964:	d1 f8                	sar    %eax
 8048966:	74 1b                	je     8048983 <register_tm_clones+0x33>
 8048968:	ba 00 00 00 00       	mov    $0x0,%edx
 804896d:	85 d2                	test   %edx,%edx
 804896f:	74 12                	je     8048983 <register_tm_clones+0x33>
 8048971:	55                   	push   %ebp
 8048972:	89 e5                	mov    %esp,%ebp
 8048974:	83 ec 10             	sub    $0x10,%esp
 8048977:	50                   	push   %eax
 8048978:	68 a0 c3 04 08       	push   $0x804c3a0
 804897d:	ff d2                	call   *%edx
 804897f:	83 c4 10             	add    $0x10,%esp
 8048982:	c9                   	leave  
 8048983:	f3 c3                	repz ret 
 8048985:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048989:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048990 <__do_global_dtors_aux>:
 8048990:	80 3d c8 c3 04 08 00 	cmpb   $0x0,0x804c3c8
 8048997:	75 13                	jne    80489ac <__do_global_dtors_aux+0x1c>
 8048999:	55                   	push   %ebp
 804899a:	89 e5                	mov    %esp,%ebp
 804899c:	83 ec 08             	sub    $0x8,%esp
 804899f:	e8 7c ff ff ff       	call   8048920 <deregister_tm_clones>
 80489a4:	c6 05 c8 c3 04 08 01 	movb   $0x1,0x804c3c8
 80489ab:	c9                   	leave  
 80489ac:	f3 c3                	repz ret 
 80489ae:	66 90                	xchg   %ax,%ax

080489b0 <frame_dummy>:
 80489b0:	b8 10 bf 04 08       	mov    $0x804bf10,%eax
 80489b5:	8b 10                	mov    (%eax),%edx
 80489b7:	85 d2                	test   %edx,%edx
 80489b9:	75 05                	jne    80489c0 <frame_dummy+0x10>
 80489bb:	eb 93                	jmp    8048950 <register_tm_clones>
 80489bd:	8d 76 00             	lea    0x0(%esi),%esi
 80489c0:	ba 00 00 00 00       	mov    $0x0,%edx
 80489c5:	85 d2                	test   %edx,%edx
 80489c7:	74 f2                	je     80489bb <frame_dummy+0xb>
 80489c9:	55                   	push   %ebp
 80489ca:	89 e5                	mov    %esp,%ebp
 80489cc:	83 ec 14             	sub    $0x14,%esp
 80489cf:	50                   	push   %eax
 80489d0:	ff d2                	call   *%edx
 80489d2:	83 c4 10             	add    $0x10,%esp
 80489d5:	c9                   	leave  
 80489d6:	e9 75 ff ff ff       	jmp    8048950 <register_tm_clones>

080489db <main>:
 80489db:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 80489df:	83 e4 f0             	and    $0xfffffff0,%esp
 80489e2:	ff 71 fc             	pushl  -0x4(%ecx)
 80489e5:	55                   	push   %ebp
 80489e6:	89 e5                	mov    %esp,%ebp
 80489e8:	53                   	push   %ebx
 80489e9:	51                   	push   %ecx
 80489ea:	8b 01                	mov    (%ecx),%eax
 80489ec:	8b 59 04             	mov    0x4(%ecx),%ebx
 80489ef:	83 f8 01             	cmp    $0x1,%eax
 80489f2:	75 0c                	jne    8048a00 <main+0x25>
 80489f4:	a1 c0 c3 04 08       	mov    0x804c3c0,%eax
 80489f9:	a3 d0 c3 04 08       	mov    %eax,0x804c3d0
 80489fe:	eb 5b                	jmp    8048a5b <main+0x80>
 8048a00:	83 f8 02             	cmp    $0x2,%eax
 8048a03:	75 39                	jne    8048a3e <main+0x63>
 8048a05:	83 ec 08             	sub    $0x8,%esp
 8048a08:	68 a0 9e 04 08       	push   $0x8049ea0
 8048a0d:	ff 73 04             	pushl  0x4(%ebx)
 8048a10:	e8 0b fe ff ff       	call   8048820 <fopen@plt>
 8048a15:	a3 d0 c3 04 08       	mov    %eax,0x804c3d0
 8048a1a:	83 c4 10             	add    $0x10,%esp
 8048a1d:	85 c0                	test   %eax,%eax
 8048a1f:	75 3a                	jne    8048a5b <main+0x80>
 8048a21:	ff 73 04             	pushl  0x4(%ebx)
 8048a24:	ff 33                	pushl  (%ebx)
 8048a26:	68 a2 9e 04 08       	push   $0x8049ea2
 8048a2b:	6a 01                	push   $0x1
 8048a2d:	e8 0e fe ff ff       	call   8048840 <__printf_chk@plt>
 8048a32:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048a39:	e8 a2 fd ff ff       	call   80487e0 <exit@plt>
 8048a3e:	83 ec 04             	sub    $0x4,%esp
 8048a41:	ff 33                	pushl  (%ebx)
 8048a43:	68 bf 9e 04 08       	push   $0x8049ebf
 8048a48:	6a 01                	push   $0x1
 8048a4a:	e8 f1 fd ff ff       	call   8048840 <__printf_chk@plt>
 8048a4f:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048a56:	e8 85 fd ff ff       	call   80487e0 <exit@plt>
 8048a5b:	e8 e2 05 00 00       	call   8049042 <initialize_bomb>
 8048a60:	83 ec 0c             	sub    $0xc,%esp
 8048a63:	68 24 9f 04 08       	push   $0x8049f24
 8048a68:	e8 53 fd ff ff       	call   80487c0 <puts@plt>
 8048a6d:	c7 04 24 60 9f 04 08 	movl   $0x8049f60,(%esp)
 8048a74:	e8 47 fd ff ff       	call   80487c0 <puts@plt>
 8048a79:	e8 b6 06 00 00       	call   8049134 <read_line>
 8048a7e:	89 04 24             	mov    %eax,(%esp)
 8048a81:	e8 ad 00 00 00       	call   8048b33 <phase_1>
 8048a86:	e8 a2 07 00 00       	call   804922d <phase_defused>
 8048a8b:	c7 04 24 8c 9f 04 08 	movl   $0x8049f8c,(%esp)
 8048a92:	e8 29 fd ff ff       	call   80487c0 <puts@plt>
 8048a97:	e8 98 06 00 00       	call   8049134 <read_line>
 8048a9c:	89 04 24             	mov    %eax,(%esp)
 8048a9f:	e8 b0 00 00 00       	call   8048b54 <phase_2>
 8048aa4:	e8 84 07 00 00       	call   804922d <phase_defused>
 8048aa9:	c7 04 24 d9 9e 04 08 	movl   $0x8049ed9,(%esp)
 8048ab0:	e8 0b fd ff ff       	call   80487c0 <puts@plt>
 8048ab5:	e8 7a 06 00 00       	call   8049134 <read_line>
 8048aba:	89 04 24             	mov    %eax,(%esp)
 8048abd:	e8 f5 00 00 00       	call   8048bb7 <phase_3>
 8048ac2:	e8 66 07 00 00       	call   804922d <phase_defused>
 8048ac7:	c7 04 24 f7 9e 04 08 	movl   $0x8049ef7,(%esp)
 8048ace:	e8 ed fc ff ff       	call   80487c0 <puts@plt>
 8048ad3:	e8 5c 06 00 00       	call   8049134 <read_line>
 8048ad8:	89 04 24             	mov    %eax,(%esp)
 8048adb:	e8 de 01 00 00       	call   8048cbe <phase_4>
 8048ae0:	e8 48 07 00 00       	call   804922d <phase_defused>
 8048ae5:	c7 04 24 b8 9f 04 08 	movl   $0x8049fb8,(%esp)
 8048aec:	e8 cf fc ff ff       	call   80487c0 <puts@plt>
 8048af1:	e8 3e 06 00 00       	call   8049134 <read_line>
 8048af6:	89 04 24             	mov    %eax,(%esp)
 8048af9:	e8 35 02 00 00       	call   8048d33 <phase_5>
 8048afe:	e8 2a 07 00 00       	call   804922d <phase_defused>
 8048b03:	c7 04 24 06 9f 04 08 	movl   $0x8049f06,(%esp)
 8048b0a:	e8 b1 fc ff ff       	call   80487c0 <puts@plt>
 8048b0f:	e8 20 06 00 00       	call   8049134 <read_line>
 8048b14:	89 04 24             	mov    %eax,(%esp)
 8048b17:	e8 97 02 00 00       	call   8048db3 <phase_6>
 8048b1c:	e8 0c 07 00 00       	call   804922d <phase_defused>
 8048b21:	83 c4 10             	add    $0x10,%esp
 8048b24:	b8 00 00 00 00       	mov    $0x0,%eax
 8048b29:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8048b2c:	59                   	pop    %ecx
 8048b2d:	5b                   	pop    %ebx
 8048b2e:	5d                   	pop    %ebp
 8048b2f:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048b32:	c3                   	ret    

08048b33 <phase_1>:
 8048b33:	83 ec 14             	sub    $0x14,%esp
 8048b36:	68 dc 9f 04 08       	push   $0x8049fdc
 8048b3b:	ff 74 24 1c          	pushl  0x1c(%esp)
 8048b3f:	e8 99 04 00 00       	call   8048fdd <strings_not_equal>
 8048b44:	83 c4 10             	add    $0x10,%esp
 8048b47:	85 c0                	test   %eax,%eax
 8048b49:	74 05                	je     8048b50 <phase_1+0x1d>
 8048b4b:	e8 84 05 00 00       	call   80490d4 <explode_bomb>
 8048b50:	83 c4 0c             	add    $0xc,%esp
 8048b53:	c3                   	ret    

08048b54 <phase_2>:
 8048b54:	56                   	push   %esi
 8048b55:	53                   	push   %ebx
 8048b56:	83 ec 2c             	sub    $0x2c,%esp
 8048b59:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048b5f:	89 44 24 24          	mov    %eax,0x24(%esp)
 8048b63:	31 c0                	xor    %eax,%eax
 8048b65:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048b69:	50                   	push   %eax
 8048b6a:	ff 74 24 3c          	pushl  0x3c(%esp)
 8048b6e:	e8 86 05 00 00       	call   80490f9 <read_six_numbers>
 8048b73:	83 c4 10             	add    $0x10,%esp
 8048b76:	83 7c 24 04 01       	cmpl   $0x1,0x4(%esp)
 8048b7b:	74 05                	je     8048b82 <phase_2+0x2e>
 8048b7d:	e8 52 05 00 00       	call   80490d4 <explode_bomb>
 8048b82:	8d 5c 24 04          	lea    0x4(%esp),%ebx
 8048b86:	8d 74 24 18          	lea    0x18(%esp),%esi
 8048b8a:	8b 03                	mov    (%ebx),%eax
 8048b8c:	01 c0                	add    %eax,%eax
 8048b8e:	39 43 04             	cmp    %eax,0x4(%ebx)
 8048b91:	74 05                	je     8048b98 <phase_2+0x44>
 8048b93:	e8 3c 05 00 00       	call   80490d4 <explode_bomb>
 8048b98:	83 c3 04             	add    $0x4,%ebx
 8048b9b:	39 f3                	cmp    %esi,%ebx
 8048b9d:	75 eb                	jne    8048b8a <phase_2+0x36>
 8048b9f:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048ba3:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048baa:	74 05                	je     8048bb1 <phase_2+0x5d>
 8048bac:	e8 df fb ff ff       	call   8048790 <__stack_chk_fail@plt>
 8048bb1:	83 c4 24             	add    $0x24,%esp
 8048bb4:	5b                   	pop    %ebx
 8048bb5:	5e                   	pop    %esi
 8048bb6:	c3                   	ret    

08048bb7 <phase_3>:
 8048bb7:	83 ec 1c             	sub    $0x1c,%esp
 8048bba:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048bc0:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048bc4:	31 c0                	xor    %eax,%eax
 8048bc6:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048bca:	50                   	push   %eax
 8048bcb:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048bcf:	50                   	push   %eax
 8048bd0:	68 5f a1 04 08       	push   $0x804a15f
 8048bd5:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048bd9:	e8 32 fc ff ff       	call   8048810 <__isoc99_sscanf@plt>
 8048bde:	83 c4 10             	add    $0x10,%esp
 8048be1:	83 f8 01             	cmp    $0x1,%eax                ;eax>1 :bomb
 8048be4:	7f 05                	jg     8048beb <phase_3+0x34>   ;beb
 8048be6:	e8 e9 04 00 00       	call   80490d4 <explode_bomb>
 8048beb:	83 7c 24 04 07       	cmpl   $0x7,0x4(%esp)           ;esp+4>7 :bomb
 8048bf0:	77 3c                	ja     8048c2e <phase_3+0x77>   ;c2e
 8048bf2:	8b 44 24 04          	mov    0x4(%esp),%eax
 8048bf6:	ff 24 85 f8 9f 04 08 	jmp    *0x8049ff8(,%eax,4)
 8048bfd:	b8 64 00 00 00       	mov    $0x64,%eax
 8048c02:	eb 3b                	jmp    8048c3f <phase_3+0x88>   ;c3f
 8048c04:	b8 d2 01 00 00       	mov    $0x1d2,%eax
 8048c09:	eb 34                	jmp    8048c3f <phase_3+0x88>
 8048c0b:	b8 a9 02 00 00       	mov    $0x2a9,%eax
 8048c10:	eb 2d                	jmp    8048c3f <phase_3+0x88>
 8048c12:	b8 4a 02 00 00       	mov    $0x24a,%eax
 8048c17:	eb 26                	jmp    8048c3f <phase_3+0x88>
 8048c19:	b8 9c 02 00 00       	mov    $0x29c,%eax
 8048c1e:	eb 1f                	jmp    8048c3f <phase_3+0x88>
 8048c20:	b8 83 01 00 00       	mov    $0x183,%eax
 8048c25:	eb 18                	jmp    8048c3f <phase_3+0x88>
 8048c27:	b8 ec 02 00 00       	mov    $0x2ec,%eax
 8048c2c:	eb 11                	jmp    8048c3f <phase_3+0x88>
 8048c2e:	e8 a1 04 00 00       	call   80490d4 <explode_bomb>
 8048c33:	b8 00 00 00 00       	mov    $0x0,%eax
 8048c38:	eb 05                	jmp    8048c3f <phase_3+0x88>
 8048c3a:	b8 62 00 00 00       	mov    $0x62,%eax
 8048c3f:	3b 44 24 08          	cmp    0x8(%esp),%eax
 8048c43:	74 05                	je     8048c4a <phase_3+0x93>    ;c4a
 8048c45:	e8 8a 04 00 00       	call   80490d4 <explode_bomb>
 8048c4a:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048c4e:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048c55:	74 05                	je     8048c5c <phase_3+0xa5>
 8048c57:	e8 34 fb ff ff       	call   8048790 <__stack_chk_fail@plt>
 8048c5c:	83 c4 1c             	add    $0x1c,%esp
 8048c5f:	c3                   	ret    

08048c60 <func4>:
 8048c60:	56                   	push   %esi
 8048c61:	53                   	push   %ebx
 8048c62:	83 ec 04             	sub    $0x4,%esp
 8048c65:	8b 4c 24 10          	mov    0x10(%esp),%ecx    ;the first
 8048c69:	8b 5c 24 14          	mov    0x14(%esp),%ebx    ;the second
 8048c6d:	8b 74 24 18          	mov    0x18(%esp),%esi    ;esi the first para
 8048c71:	89 f0                	mov    %esi,%eax   ;eax=0x18
 8048c73:	29 d8                	sub    %ebx,%eax   ;eax=0x4
 8048c75:	89 c2                	mov    %eax,%edx   ;edx=0x4
 8048c77:	c1 ea 1f             	shr    $0x1f,%edx  ;edx /31
 8048c7a:	01 d0                	add    %edx,%eax   ;
 8048c7c:	d1 f8                	sar    %eax
 8048c7e:	8d 14 18             	lea    (%eax,%ebx,1),%edx
 8048c81:	39 ca                	cmp    %ecx,%edx
 8048c83:	7e 15                	jle    8048c9a <func4+0x3a>
 8048c85:	83 ec 04             	sub    $0x4,%esp
 8048c88:	83 ea 01             	sub    $0x1,%edx
 8048c8b:	52                   	push   %edx
 8048c8c:	53                   	push   %ebx
 8048c8d:	51                   	push   %ecx
 8048c8e:	e8 cd ff ff ff       	call   8048c60 <func4>
 8048c93:	83 c4 10             	add    $0x10,%esp
 8048c96:	01 c0                	add    %eax,%eax
 8048c98:	eb 1e                	jmp    8048cb8 <func4+0x58>
 8048c9a:	b8 00 00 00 00       	mov    $0x0,%eax
 8048c9f:	39 ca                	cmp    %ecx,%edx
 8048ca1:	7d 15                	jge    8048cb8 <func4+0x58>
 8048ca3:	83 ec 04             	sub    $0x4,%esp
 8048ca6:	56                   	push   %esi
 8048ca7:	83 c2 01             	add    $0x1,%edx
 8048caa:	52                   	push   %edx
 8048cab:	51                   	push   %ecx
 8048cac:	e8 af ff ff ff       	call   8048c60 <func4>
 8048cb1:	83 c4 10             	add    $0x10,%esp
 8048cb4:	8d 44 00 01          	lea    0x1(%eax,%eax,1),%eax
 8048cb8:	83 c4 04             	add    $0x4,%esp
 8048cbb:	5b                   	pop    %ebx
 8048cbc:	5e                   	pop    %esi
 8048cbd:	c3                   	ret    

08048cbe <phase_4>:
 8048cbe:	83 ec 1c             	sub    $0x1c,%esp
 8048cc1:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048cc7:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048ccb:	31 c0                	xor    %eax,%eax
 8048ccd:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048cd1:	50                   	push   %eax
 8048cd2:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048cd6:	50                   	push   %eax
 8048cd7:	68 5f a1 04 08       	push   $0x804a15f
 8048cdc:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048ce0:	e8 2b fb ff ff       	call   8048810 <__isoc99_sscanf@plt>
 8048ce5:	83 c4 10             	add    $0x10,%esp
 8048ce8:	83 f8 02             	cmp    $0x2,%eax          ;p1=2    
 8048ceb:	75 07                	jne    8048cf4 <phase_4+0x36>   ;eax!=2
 8048ced:	83 7c 24 04 0e       	cmpl   $0xe,0x4(%esp)
 8048cf2:	76 05                	jbe    8048cf9 <phase_4+0x3b>  ;p2<=0xe
 8048cf4:	e8 db 03 00 00       	call   80490d4 <explode_bomb>
 8048cf9:	83 ec 04             	sub    $0x4,%esp
 8048cfc:	6a 0e                	push   $0xe
 8048cfe:	6a 00                	push   $0x0
 8048d00:	ff 74 24 10          	pushl  0x10(%esp)   ;p2 is third para
 8048d04:	e8 57 ff ff ff       	call   8048c60 <func4>
 8048d09:	83 c4 10             	add    $0x10,%esp
 8048d0c:	83 f8 04             	cmp    $0x4,%eax   
 8048d0f:	75 07                	jne    8048d18 <phase_4+0x5a>
 8048d11:	83 7c 24 08 04       	cmpl   $0x4,0x8(%esp)
 8048d16:	74 05                	je     8048d1d <phase_4+0x5f>
 8048d18:	e8 b7 03 00 00       	call   80490d4 <explode_bomb>
 8048d1d:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048d21:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048d28:	74 05                	je     8048d2f <phase_4+0x71>
 8048d2a:	e8 61 fa ff ff       	call   8048790 <__stack_chk_fail@plt>
 8048d2f:	83 c4 1c             	add    $0x1c,%esp
 8048d32:	c3                   	ret    

08048d33 <phase_5>:
 8048d33:	53                   	push   %ebx
 8048d34:	83 ec 24             	sub    $0x24,%esp
 8048d37:	8b 5c 24 2c          	mov    0x2c(%esp),%ebx  ;将栈指针 %esp 偏移 44 字节处的值存储到寄存器 %ebx 中。
 8048d3b:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048d41:	89 44 24 18          	mov    %eax,0x18(%esp)
 8048d45:	31 c0                	xor    %eax,%eax
 8048d47:	53                   	push   %ebx
 8048d48:	e8 71 02 00 00       	call   8048fbe <string_length> ;调用函数 string_length，计算 %ebx 所指向的字符串的长度。
 8048d4d:	83 c4 10             	add    $0x10,%esp
 8048d50:	83 f8 06             	cmp    $0x6,%eax     ;将寄存器 %eax 中的值与常数 6 进行比较，即判断字符串长度是否为 6。
 8048d53:	74 05                	je     8048d5a <phase_5+0x27>
 8048d55:	e8 7a 03 00 00       	call   80490d4 <explode_bomb>
 8048d5a:	b8 00 00 00 00       	mov    $0x0,%eax
 8048d5f:	0f b6 14 03          	movzbl (%ebx,%eax,1),%edx;将 %ebx+%eax*1 地址处的字节值零拓展为双字，并存储到寄存器 %edx 中。
 8048d63:	83 e2 0f             	and    $0xf,%edx    ;edx是ebx 的每一位字符
 8048d66:	0f b6 92 18 a0 04 08 	movzbl 0x804a018(%edx),%edx
 8048d6d:	88 54 04 05          	mov    %dl,0x5(%esp,%eax,1);将寄存器 %dl 的值存储到栈指针 %esp+%eax*1+5 地址处。
 8048d71:	83 c0 01             	add    $0x1,%eax
 8048d74:	83 f8 06             	cmp    $0x6,%eax  ;将寄存器 %eax 中的值与常数 6 进行比较，判断是否已经遍历完 6 个字符。
 8048d77:	75 e6                	jne    8048d5f <phase_5+0x2c>
 8048d79:	c6 44 24 0b 00       	movb   $0x0,0xb(%esp)
 8048d7e:	83 ec 08             	sub    $0x8,%esp
 8048d81:	68 f0 9f 04 08       	push   $0x8049ff0  ;字符串比较的第一个参数。
 8048d86:	8d 44 24 11          	lea    0x11(%esp),%eax  ;字符串比较的第2个参数
 8048d8a:	50                   	push   %eax
 8048d8b:	e8 4d 02 00 00       	call   8048fdd <strings_not_equal>
 8048d90:	83 c4 10             	add    $0x10,%esp
 8048d93:	85 c0                	test   %eax,%eax
 8048d95:	74 05                	je     8048d9c <phase_5+0x69>
 8048d97:	e8 38 03 00 00       	call   80490d4 <explode_bomb>
 8048d9c:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048da0:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048da7:	74 05                	je     8048dae <phase_5+0x7b>
 8048da9:	e8 e2 f9 ff ff       	call   8048790 <__stack_chk_fail@plt>
 8048dae:	83 c4 18             	add    $0x18,%esp
 8048db1:	5b                   	pop    %ebx
 8048db2:	c3                   	ret    

08048db3 <phase_6>:
 8048db3:	56                   	push   %esi
 8048db4:	53                   	push   %ebx
 8048db5:	83 ec 4c             	sub    $0x4c,%esp
 8048db8:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048dbe:	89 44 24 44          	mov    %eax,0x44(%esp)
 8048dc2:	31 c0                	xor    %eax,%eax
 8048dc4:	8d 44 24 14          	lea    0x14(%esp),%eax
 8048dc8:	50                   	push   %eax
 8048dc9:	ff 74 24 5c          	pushl  0x5c(%esp)
 8048dcd:	e8 27 03 00 00       	call   80490f9 <read_six_numbers>
 8048dd2:	83 c4 10             	add    $0x10,%esp
 8048dd5:	be 00 00 00 00       	mov    $0x0,%esi
 8048dda:	8b 44 b4 0c          	mov    0xc(%esp,%esi,4),%eax  ;提取每一个数
 8048dde:	83 e8 01             	sub    $0x1,%eax              ;对每一个数-1
 8048de1:	83 f8 05             	cmp    $0x5,%eax              ;和5比较，当前数大于5则爆炸，相当于每一个数都<6
 8048de4:	76 05                	jbe    8048deb <phase_6+0x38> 
 8048de6:	e8 e9 02 00 00       	call   80490d4 <explode_bomb> 
 8048deb:	83 c6 01             	add    $0x1,%esi              ;开始外循环esi从1开始
 8048dee:	83 fe 06             	cmp    $0x6,%esi              ;外循环出口：如果是最后一个数就跳到e26
 8048df1:	74 33                	je     8048e26 <phase_6+0x73> 
 8048df3:	89 f3                	mov    %esi,%ebx	      ;用ebx保存esi
 8048df5:	8b 44 9c 0c          	mov    0xc(%esp,%ebx,4),%eax  ;开始内循环
 8048df9:	39 44 b4 08          	cmp    %eax,0x8(%esp,%esi,4)  ;num[ebx]和num[esi]比
 8048dfd:	75 05                	jne    8048e04 <phase_6+0x51> ;相等爆炸
 8048dff:	e8 d0 02 00 00       	call   80490d4 <explode_bomb>
 8048e04:	83 c3 01             	add    $0x1,%ebx	      ;ebx+1循环
 8048e07:	83 fb 05             	cmp    $0x5,%ebx              ;到结尾就终止
 8048e0a:	7e e9                	jle    8048df5 <phase_6+0x42> ;内循环继续
 8048e0c:	eb cc                	jmp    8048dda <phase_6+0x27> ;外循环继续
 8048e0e:	8b 52 08             	mov    0x8(%edx),%edx    ;e0e实现,edx（0x804c13c）不断后移8
 8048e11:	83 c0 01             	add    $0x1,%eax          ；eax取遍1-6，看edx随ecx是几而变
 8048e14:	39 c8                	cmp    %ecx,%eax           ；eax!=ecx就继续循环
 8048e16:	75 f6                	jne    8048e0e <phase_6+0x5b>  
                                                                   ；下面这部分两个分支都有
 8048e18:	89 54 b4 24          	mov    %edx,0x24(%esp,%esi,4)  ；esi=ebx，但是起始位置是num[5]
 8048e1c:	83 c3 01             	add    $0x1,%ebx            ；num[ebx]取下一个
 8048e1f:	83 fb 06             	cmp    $0x6,%ebx
 8048e22:	75 07                	jne    8048e2b <phase_6+0x78> ；ebx！=6就到e2b继续循环
 8048e24:	eb 1c                	jmp    8048e42 <phase_6+0x8f>S ；否则就跳出到e42
 8048e26:	bb 00 00 00 00       	mov    $0x0,%ebx              ；已经实现1-6且不重复
 8048e2b:	89 de                	mov    %ebx,%esi              ；从0开始循环：ebx=->esi
 8048e2d:	8b 4c 9c 0c          	mov    0xc(%esp,%ebx,4),%ecx ；ecx=num[ebx] num[0]~num[5]
 8048e31:	b8 01 00 00 00       	mov    $0x1,%eax              ；eax+1
 8048e36:	ba 3c c1 04 08       	mov    $0x804c13c,%edx        ;edx取内存
 8048e3b:	83 f9 01             	cmp    $0x1,%ecx	      ；ecx也就是num[ebx]和 1比 
 8048e3e:	7f ce                	jg     8048e0e <phase_6+0x5b> ；大于1到e0e，是为了找到ecx到底是1-6中的哪一个
 8048e40:	eb d6                	jmp    8048e18 <phase_6+0x65> ；否则到 e18
 8048e42:	8b 5c 24 24          	mov    0x24(%esp),%ebx   ;ebx=node1地址
 8048e46:	8d 44 24 24          	lea    0x24(%esp),%eax   ;eax堆栈指针用来遍历堆栈1-6单元
 8048e4a:	8d 74 24 38          	lea    0x38(%esp),%esi   ；堆栈的结尾
 8048e4e:	89 d9                	mov    %ebx,%ecx         ；ecx是node1-6地址
 8048e50:	8b 50 04             	mov    0x4(%eax),%edx   ；不断循环，edx是堆栈中下一个结点
 8048e53:	89 51 08             	mov    %edx,0x8(%ecx)   ；edx->（ecx+8）
 8048e56:	83 c0 04             	add    $0x4,%eax        ;eax后移一个结点
 8048e59:	89 d1                	mov    %edx,%ecx         ；edx也同步后移
 8048e5b:	39 f0                	cmp    %esi,%eax  
 8048e5d:	75 f1                	jne    8048e50 <phase_6+0x9d> ；当堆栈中地址没完就继续循环
 8048e5f:	c7 42 08 00 00 00 00 	movl   $0x0,0x8(%edx)    
 8048e66:	be 05 00 00 00       	mov    $0x5,%esi        ；esi是计数器5减到0
 8048e6b:	8b 43 08             	mov    0x8(%ebx),%eax  ；ebx是第一个结点地址，因而eax是第二个结点地址
 8048e6e:	8b 00                	mov    (%eax),%eax    ;eax变成第二个结点的值
 8048e70:	39 03                	cmp    %eax,(%ebx)    ；第一个结点的值和第二个比较
 8048e72:	7d 05                	jge    8048e79 <phase_6+0xc6>  ；如果第一个>=第二个就继续
 8048e74:	e8 5b 02 00 00       	call   80490d4 <explode_bomb>   ；否则爆炸
 8048e79:	8b 5b 08             	mov    0x8(%ebx),%ebx         ；ebx后移一个结点
 8048e7c:	83 ee 01             	sub    $0x1,%esi
 8048e7f:	75 ea                	jne    8048e6b <phase_6+0xb8>  ；循环直到6个都遍历
 8048e81:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 8048e85:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048e8c:	74 05                	je     8048e93 <phase_6+0xe0>
 8048e8e:	e8 fd f8 ff ff       	call   8048790 <__stack_chk_fail@plt>
 8048e93:	83 c4 44             	add    $0x44,%esp
 8048e96:	5b                   	pop    %ebx
 8048e97:	5e                   	pop    %esi
 8048e98:	c3                   	ret    

08048e99 <fun7>:
 8048e99:	53                   	push   %ebx
 8048e9a:	83 ec 08             	sub    $0x8,%esp
 8048e9d:	8b 54 24 10          	mov    0x10(%esp),%edx     ;参数1，也就是36的地址
 8048ea1:	8b 4c 24 14          	mov    0x14(%esp),%ecx     ;参数2，我们输入的数字
 8048ea5:	85 d2                	test   %edx,%edx       
 8048ea7:	74 37                	je     8048ee0 <fun7+0x47>  ；如果edx里的地址为0，跳转到ee0
 8048ea9:	8b 1a                	mov    (%edx),%ebx         ；将edx里地址处的值36...给 ebx
 8048eab:	39 cb                	cmp    %ecx,%ebx           
 8048ead:	7e 13                	jle    8048ec2 <fun7+0x29>  ；If(ebx<=ecx) 跳转到ec2
 8048eaf:	83 ec 08             	sub    $0x8,%esp
 8048eb2:	51                   	push   %ecx
 8048eb3:	ff 72 04             	pushl  0x4(%edx)
 8048eb6:	e8 de ff ff ff       	call   8048e99 <fun7>     ；递归调用fun7(输入的值,36+4=40)
 8048ebb:	83 c4 10             	add    $0x10,%esp
 8048ebe:	01 c0                	add    %eax,%eax           ;返回值*2
 8048ec0:	eb 23                	jmp    8048ee5 <fun7+0x4c>
 8048ec2:	b8 00 00 00 00       	mov    $0x0,%eax          
 8048ec7:	39 cb                	cmp    %ecx,%ebx
 8048ec9:	74 1a                	je     8048ee5 <fun7+0x4c>      ；ebx=ecx，返回值=0
 8048ecb:	83 ec 08             	sub    $0x8,%esp
 8048ece:	51                   	push   %ecx
 8048ecf:	ff 72 08             	pushl  0x8(%edx)
 8048ed2:	e8 c2 ff ff ff       	call   8048e99 <fun7>
 8048ed7:	83 c4 10             	add    $0x10,%esp
 8048eda:	8d 44 00 01          	lea    0x1(%eax,%eax,1),%eax       ；2*fun7(addr+8,input	)+1
 8048ede:	eb 05                	jmp    8048ee5 <fun7+0x4c>
 8048ee0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax        ;ebx<ecxee0处相当于返回值=-1
 8048ee5:	83 c4 08             	add    $0x8,%esp
 8048ee8:	5b                   	pop    %ebx
 8048ee9:	c3                   	ret    

08048eea <secret_phase>:
 8048eea:	53                   	push   %ebx
 8048eeb:	83 ec 08             	sub    $0x8,%esp
 8048eee:	e8 41 02 00 00       	call   8049134 <read_line>
 8048ef3:	83 ec 04             	sub    $0x4,%esp
 8048ef6:	6a 0a                	push   $0xa
 8048ef8:	6a 00                	push   $0x0
 8048efa:	50                   	push   %eax
 8048efb:	e8 80 f9 ff ff       	call   8048880 <strtol@plt>
 8048f00:	89 c3                	mov    %eax,%ebx
 8048f02:	8d 40 ff             	lea    -0x1(%eax),%eax   ;eax自减
 8048f05:	83 c4 10             	add    $0x10,%esp       
 8048f08:	3d e8 03 00 00       	cmp    $0x3e8,%eax       ；eax和1016-16=1000比
 8048f0d:	76 05                	jbe    8048f14 <secret_phase+0x2a>   ；大于就爆炸
 8048f0f:	e8 c0 01 00 00       	call   80490d4 <explode_bomb>
 8048f14:	83 ec 08             	sub    $0x8,%esp
 8048f17:	53                   	push   %ebx；第1个参数，我们输入的值
 8048f18:	68 88 c0 04 08       	push   $0x804c088 ：第二个参数gdb查看发现是0x24
 8048f1d:	e8 77 ff ff ff       	call   8048e99 <fun7>
 8048f22:	83 c4 10             	add    $0x10,%esp
 8048f25:	85 c0                	test   %eax,%eax   ;判断返回值
 8048f27:	74 05                	je     8048f2e <secret_phase+0x44>  ；返回0就不会爆炸
 8048f29:	e8 a6 01 00 00       	call   80490d4 <explode_bomb>   ；否则就会爆炸
 8048f2e:	83 ec 0c             	sub    $0xc,%esp
 8048f31:	68 28 a0 04 08       	push   $0x804a028
 8048f36:	e8 85 f8 ff ff       	call   80487c0 <puts@plt>
 8048f3b:	e8 ed 02 00 00       	call   804922d <phase_defused>
 8048f40:	83 c4 18             	add    $0x18,%esp
 8048f43:	5b                   	pop    %ebx
 8048f44:	c3                   	ret    

08048f45 <sig_handler>:
 8048f45:	83 ec 18             	sub    $0x18,%esp
 8048f48:	68 50 a0 04 08       	push   $0x804a050
 8048f4d:	e8 6e f8 ff ff       	call   80487c0 <puts@plt>
 8048f52:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
 8048f59:	e8 12 f8 ff ff       	call   8048770 <sleep@plt>
 8048f5e:	83 c4 08             	add    $0x8,%esp
 8048f61:	68 12 a1 04 08       	push   $0x804a112
 8048f66:	6a 01                	push   $0x1
 8048f68:	e8 d3 f8 ff ff       	call   8048840 <__printf_chk@plt>
 8048f6d:	83 c4 04             	add    $0x4,%esp
 8048f70:	ff 35 c4 c3 04 08    	pushl  0x804c3c4
 8048f76:	e8 c5 f7 ff ff       	call   8048740 <fflush@plt>
 8048f7b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048f82:	e8 e9 f7 ff ff       	call   8048770 <sleep@plt>
 8048f87:	c7 04 24 1a a1 04 08 	movl   $0x804a11a,(%esp)
 8048f8e:	e8 2d f8 ff ff       	call   80487c0 <puts@plt>
 8048f93:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
 8048f9a:	e8 41 f8 ff ff       	call   80487e0 <exit@plt>

08048f9f <invalid_phase>:
 8048f9f:	83 ec 10             	sub    $0x10,%esp
 8048fa2:	ff 74 24 14          	pushl  0x14(%esp)
 8048fa6:	68 22 a1 04 08       	push   $0x804a122
 8048fab:	6a 01                	push   $0x1
 8048fad:	e8 8e f8 ff ff       	call   8048840 <__printf_chk@plt>
 8048fb2:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048fb9:	e8 22 f8 ff ff       	call   80487e0 <exit@plt>

08048fbe <string_length>:
 8048fbe:	8b 54 24 04          	mov    0x4(%esp),%edx
 8048fc2:	80 3a 00             	cmpb   $0x0,(%edx)
 8048fc5:	74 10                	je     8048fd7 <string_length+0x19>
 8048fc7:	b8 00 00 00 00       	mov    $0x0,%eax
 8048fcc:	83 c0 01             	add    $0x1,%eax
 8048fcf:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
 8048fd3:	75 f7                	jne    8048fcc <string_length+0xe>
 8048fd5:	f3 c3                	repz ret 
 8048fd7:	b8 00 00 00 00       	mov    $0x0,%eax
 8048fdc:	c3                   	ret    

08048fdd <strings_not_equal>:
 8048fdd:	57                   	push   %edi
 8048fde:	56                   	push   %esi
 8048fdf:	53                   	push   %ebx
 8048fe0:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8048fe4:	8b 74 24 14          	mov    0x14(%esp),%esi
 8048fe8:	53                   	push   %ebx
 8048fe9:	e8 d0 ff ff ff       	call   8048fbe <string_length>
 8048fee:	89 c7                	mov    %eax,%edi
 8048ff0:	89 34 24             	mov    %esi,(%esp)
 8048ff3:	e8 c6 ff ff ff       	call   8048fbe <string_length>
 8048ff8:	83 c4 04             	add    $0x4,%esp
 8048ffb:	ba 01 00 00 00       	mov    $0x1,%edx
 8049000:	39 c7                	cmp    %eax,%edi
 8049002:	75 38                	jne    804903c <strings_not_equal+0x5f>
 8049004:	0f b6 03             	movzbl (%ebx),%eax
 8049007:	84 c0                	test   %al,%al
 8049009:	74 1e                	je     8049029 <strings_not_equal+0x4c>
 804900b:	3a 06                	cmp    (%esi),%al
 804900d:	74 06                	je     8049015 <strings_not_equal+0x38>
 804900f:	eb 1f                	jmp    8049030 <strings_not_equal+0x53>
 8049011:	3a 06                	cmp    (%esi),%al
 8049013:	75 22                	jne    8049037 <strings_not_equal+0x5a>
 8049015:	83 c3 01             	add    $0x1,%ebx
 8049018:	83 c6 01             	add    $0x1,%esi
 804901b:	0f b6 03             	movzbl (%ebx),%eax
 804901e:	84 c0                	test   %al,%al
 8049020:	75 ef                	jne    8049011 <strings_not_equal+0x34>
 8049022:	ba 00 00 00 00       	mov    $0x0,%edx
 8049027:	eb 13                	jmp    804903c <strings_not_equal+0x5f>
 8049029:	ba 00 00 00 00       	mov    $0x0,%edx
 804902e:	eb 0c                	jmp    804903c <strings_not_equal+0x5f>
 8049030:	ba 01 00 00 00       	mov    $0x1,%edx
 8049035:	eb 05                	jmp    804903c <strings_not_equal+0x5f>
 8049037:	ba 01 00 00 00       	mov    $0x1,%edx
 804903c:	89 d0                	mov    %edx,%eax
 804903e:	5b                   	pop    %ebx
 804903f:	5e                   	pop    %esi
 8049040:	5f                   	pop    %edi
 8049041:	c3                   	ret    

08049042 <initialize_bomb>:
 8049042:	83 ec 14             	sub    $0x14,%esp
 8049045:	68 45 8f 04 08       	push   $0x8048f45
 804904a:	6a 02                	push   $0x2
 804904c:	e8 0f f7 ff ff       	call   8048760 <signal@plt>
 8049051:	83 c4 1c             	add    $0x1c,%esp
 8049054:	c3                   	ret    

08049055 <initialize_bomb_solve>:
 8049055:	f3 c3                	repz ret 

08049057 <blank_line>:
 8049057:	56                   	push   %esi
 8049058:	53                   	push   %ebx
 8049059:	83 ec 04             	sub    $0x4,%esp
 804905c:	8b 74 24 10          	mov    0x10(%esp),%esi
 8049060:	eb 14                	jmp    8049076 <blank_line+0x1f>
 8049062:	e8 49 f8 ff ff       	call   80488b0 <__ctype_b_loc@plt>
 8049067:	83 c6 01             	add    $0x1,%esi
 804906a:	0f be db             	movsbl %bl,%ebx
 804906d:	8b 00                	mov    (%eax),%eax
 804906f:	f6 44 58 01 20       	testb  $0x20,0x1(%eax,%ebx,2)
 8049074:	74 0e                	je     8049084 <blank_line+0x2d>
 8049076:	0f b6 1e             	movzbl (%esi),%ebx
 8049079:	84 db                	test   %bl,%bl
 804907b:	75 e5                	jne    8049062 <blank_line+0xb>
 804907d:	b8 01 00 00 00       	mov    $0x1,%eax
 8049082:	eb 05                	jmp    8049089 <blank_line+0x32>
 8049084:	b8 00 00 00 00       	mov    $0x0,%eax
 8049089:	83 c4 04             	add    $0x4,%esp
 804908c:	5b                   	pop    %ebx
 804908d:	5e                   	pop    %esi
 804908e:	c3                   	ret    

0804908f <skip>:
 804908f:	53                   	push   %ebx
 8049090:	83 ec 08             	sub    $0x8,%esp
 8049093:	83 ec 04             	sub    $0x4,%esp
 8049096:	ff 35 d0 c3 04 08    	pushl  0x804c3d0
 804909c:	6a 50                	push   $0x50
 804909e:	a1 cc c3 04 08       	mov    0x804c3cc,%eax
 80490a3:	8d 04 80             	lea    (%eax,%eax,4),%eax
 80490a6:	c1 e0 04             	shl    $0x4,%eax
 80490a9:	05 e0 c3 04 08       	add    $0x804c3e0,%eax
 80490ae:	50                   	push   %eax
 80490af:	e8 9c f6 ff ff       	call   8048750 <fgets@plt>
 80490b4:	89 c3                	mov    %eax,%ebx
 80490b6:	83 c4 10             	add    $0x10,%esp
 80490b9:	85 c0                	test   %eax,%eax
 80490bb:	74 10                	je     80490cd <skip+0x3e>
 80490bd:	83 ec 0c             	sub    $0xc,%esp
 80490c0:	50                   	push   %eax
 80490c1:	e8 91 ff ff ff       	call   8049057 <blank_line>
 80490c6:	83 c4 10             	add    $0x10,%esp
 80490c9:	85 c0                	test   %eax,%eax
 80490cb:	75 c6                	jne    8049093 <skip+0x4>
 80490cd:	89 d8                	mov    %ebx,%eax
 80490cf:	83 c4 08             	add    $0x8,%esp
 80490d2:	5b                   	pop    %ebx
 80490d3:	c3                   	ret    

080490d4 <explode_bomb>:
 80490d4:	83 ec 18             	sub    $0x18,%esp
 80490d7:	68 33 a1 04 08       	push   $0x804a133
 80490dc:	e8 df f6 ff ff       	call   80487c0 <puts@plt>
 80490e1:	c7 04 24 3c a1 04 08 	movl   $0x804a13c,(%esp)
 80490e8:	e8 d3 f6 ff ff       	call   80487c0 <puts@plt>
 80490ed:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80490f4:	e8 e7 f6 ff ff       	call   80487e0 <exit@plt>

080490f9 <read_six_numbers>:
 80490f9:	83 ec 0c             	sub    $0xc,%esp
 80490fc:	8b 44 24 14          	mov    0x14(%esp),%eax
 8049100:	8d 50 14             	lea    0x14(%eax),%edx
 8049103:	52                   	push   %edx
 8049104:	8d 50 10             	lea    0x10(%eax),%edx
 8049107:	52                   	push   %edx
 8049108:	8d 50 0c             	lea    0xc(%eax),%edx
 804910b:	52                   	push   %edx
 804910c:	8d 50 08             	lea    0x8(%eax),%edx
 804910f:	52                   	push   %edx
 8049110:	8d 50 04             	lea    0x4(%eax),%edx
 8049113:	52                   	push   %edx
 8049114:	50                   	push   %eax
 8049115:	68 53 a1 04 08       	push   $0x804a153
 804911a:	ff 74 24 2c          	pushl  0x2c(%esp)
 804911e:	e8 ed f6 ff ff       	call   8048810 <__isoc99_sscanf@plt>
 8049123:	83 c4 20             	add    $0x20,%esp
 8049126:	83 f8 05             	cmp    $0x5,%eax
 8049129:	7f 05                	jg     8049130 <read_six_numbers+0x37>
 804912b:	e8 a4 ff ff ff       	call   80490d4 <explode_bomb>
 8049130:	83 c4 0c             	add    $0xc,%esp
 8049133:	c3                   	ret    

08049134 <read_line>:
 8049134:	57                   	push   %edi
 8049135:	56                   	push   %esi
 8049136:	53                   	push   %ebx
 8049137:	e8 53 ff ff ff       	call   804908f <skip>
 804913c:	85 c0                	test   %eax,%eax
 804913e:	75 70                	jne    80491b0 <read_line+0x7c>
 8049140:	a1 c0 c3 04 08       	mov    0x804c3c0,%eax
 8049145:	39 05 d0 c3 04 08    	cmp    %eax,0x804c3d0
 804914b:	75 19                	jne    8049166 <read_line+0x32>
 804914d:	83 ec 0c             	sub    $0xc,%esp
 8049150:	68 65 a1 04 08       	push   $0x804a165
 8049155:	e8 66 f6 ff ff       	call   80487c0 <puts@plt>
 804915a:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049161:	e8 7a f6 ff ff       	call   80487e0 <exit@plt>
 8049166:	83 ec 0c             	sub    $0xc,%esp
 8049169:	68 83 a1 04 08       	push   $0x804a183
 804916e:	e8 3d f6 ff ff       	call   80487b0 <getenv@plt>
 8049173:	83 c4 10             	add    $0x10,%esp
 8049176:	85 c0                	test   %eax,%eax
 8049178:	74 0a                	je     8049184 <read_line+0x50>
 804917a:	83 ec 0c             	sub    $0xc,%esp
 804917d:	6a 00                	push   $0x0
 804917f:	e8 5c f6 ff ff       	call   80487e0 <exit@plt>
 8049184:	a1 c0 c3 04 08       	mov    0x804c3c0,%eax
 8049189:	a3 d0 c3 04 08       	mov    %eax,0x804c3d0
 804918e:	e8 fc fe ff ff       	call   804908f <skip>
 8049193:	85 c0                	test   %eax,%eax
 8049195:	75 19                	jne    80491b0 <read_line+0x7c>
 8049197:	83 ec 0c             	sub    $0xc,%esp
 804919a:	68 65 a1 04 08       	push   $0x804a165
 804919f:	e8 1c f6 ff ff       	call   80487c0 <puts@plt>
 80491a4:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80491ab:	e8 30 f6 ff ff       	call   80487e0 <exit@plt>
 80491b0:	8b 15 cc c3 04 08    	mov    0x804c3cc,%edx
 80491b6:	8d 1c 92             	lea    (%edx,%edx,4),%ebx
 80491b9:	c1 e3 04             	shl    $0x4,%ebx
 80491bc:	81 c3 e0 c3 04 08    	add    $0x804c3e0,%ebx
 80491c2:	b8 00 00 00 00       	mov    $0x0,%eax
 80491c7:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 80491cc:	89 df                	mov    %ebx,%edi
 80491ce:	f2 ae                	repnz scas %es:(%edi),%al
 80491d0:	f7 d1                	not    %ecx
 80491d2:	83 e9 01             	sub    $0x1,%ecx
 80491d5:	83 f9 4e             	cmp    $0x4e,%ecx
 80491d8:	7e 36                	jle    8049210 <read_line+0xdc>
 80491da:	83 ec 0c             	sub    $0xc,%esp
 80491dd:	68 8e a1 04 08       	push   $0x804a18e
 80491e2:	e8 d9 f5 ff ff       	call   80487c0 <puts@plt>
 80491e7:	a1 cc c3 04 08       	mov    0x804c3cc,%eax
 80491ec:	8d 50 01             	lea    0x1(%eax),%edx
 80491ef:	89 15 cc c3 04 08    	mov    %edx,0x804c3cc
 80491f5:	6b c0 50             	imul   $0x50,%eax,%eax
 80491f8:	05 e0 c3 04 08       	add    $0x804c3e0,%eax
 80491fd:	be a9 a1 04 08       	mov    $0x804a1a9,%esi
 8049202:	b9 04 00 00 00       	mov    $0x4,%ecx
 8049207:	89 c7                	mov    %eax,%edi
 8049209:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 804920b:	e8 c4 fe ff ff       	call   80490d4 <explode_bomb>
 8049210:	8d 04 92             	lea    (%edx,%edx,4),%eax
 8049213:	c1 e0 04             	shl    $0x4,%eax
 8049216:	c6 84 01 df c3 04 08 	movb   $0x0,0x804c3df(%ecx,%eax,1)
 804921d:	00 
 804921e:	83 c2 01             	add    $0x1,%edx
 8049221:	89 15 cc c3 04 08    	mov    %edx,0x804c3cc
 8049227:	89 d8                	mov    %ebx,%eax
 8049229:	5b                   	pop    %ebx
 804922a:	5e                   	pop    %esi
 804922b:	5f                   	pop    %edi
 804922c:	c3                   	ret    

0804922d <phase_defused>:
 804922d:	83 ec 6c             	sub    $0x6c,%esp
 8049230:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049236:	89 44 24 5c          	mov    %eax,0x5c(%esp)
 804923a:	31 c0                	xor    %eax,%eax
 804923c:	83 3d cc c3 04 08 06 	cmpl   $0x6,0x804c3cc
 8049243:	75 73                	jne    80492b8 <phase_defused+0x8b>
 8049245:	83 ec 0c             	sub    $0xc,%esp
 8049248:	8d 44 24 18          	lea    0x18(%esp),%eax
 804924c:	50                   	push   %eax
 804924d:	8d 44 24 18          	lea    0x18(%esp),%eax
 8049251:	50                   	push   %eax
 8049252:	8d 44 24 18          	lea    0x18(%esp),%eax
 8049256:	50                   	push   %eax
 8049257:	68 b9 a1 04 08       	push   $0x804a1b9
 804925c:	68 d0 c4 04 08       	push   $0x804c4d0
 8049261:	e8 aa f5 ff ff       	call   8048810 <__isoc99_sscanf@plt>
 8049266:	83 c4 20             	add    $0x20,%esp
 8049269:	83 f8 03             	cmp    $0x3,%eax
 804926c:	75 3a                	jne    80492a8 <phase_defused+0x7b>
 804926e:	83 ec 08             	sub    $0x8,%esp
 8049271:	68 c2 a1 04 08       	push   $0x804a1c2
 8049276:	8d 44 24 18          	lea    0x18(%esp),%eax
 804927a:	50                   	push   %eax
 804927b:	e8 5d fd ff ff       	call   8048fdd <strings_not_equal>
 8049280:	83 c4 10             	add    $0x10,%esp
 8049283:	85 c0                	test   %eax,%eax
 8049285:	75 21                	jne    80492a8 <phase_defused+0x7b>
 8049287:	83 ec 0c             	sub    $0xc,%esp
 804928a:	68 88 a0 04 08       	push   $0x804a088
 804928f:	e8 2c f5 ff ff       	call   80487c0 <puts@plt>
 8049294:	c7 04 24 b0 a0 04 08 	movl   $0x804a0b0,(%esp)
 804929b:	e8 20 f5 ff ff       	call   80487c0 <puts@plt>
 80492a0:	e8 45 fc ff ff       	call   8048eea <secret_phase>
 80492a5:	83 c4 10             	add    $0x10,%esp
 80492a8:	83 ec 0c             	sub    $0xc,%esp
 80492ab:	68 e8 a0 04 08       	push   $0x804a0e8
 80492b0:	e8 0b f5 ff ff       	call   80487c0 <puts@plt>
 80492b5:	83 c4 10             	add    $0x10,%esp
 80492b8:	8b 44 24 5c          	mov    0x5c(%esp),%eax
 80492bc:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 80492c3:	74 05                	je     80492ca <phase_defused+0x9d>
 80492c5:	e8 c6 f4 ff ff       	call   8048790 <__stack_chk_fail@plt>
 80492ca:	83 c4 6c             	add    $0x6c,%esp
 80492cd:	c3                   	ret    

080492ce <sigalrm_handler>:
 80492ce:	83 ec 0c             	sub    $0xc,%esp
 80492d1:	6a 00                	push   $0x0
 80492d3:	68 18 a2 04 08       	push   $0x804a218
 80492d8:	6a 01                	push   $0x1
 80492da:	ff 35 a0 c3 04 08    	pushl  0x804c3a0
 80492e0:	e8 7b f5 ff ff       	call   8048860 <__fprintf_chk@plt>
 80492e5:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80492ec:	e8 ef f4 ff ff       	call   80487e0 <exit@plt>

080492f1 <rio_readlineb>:
 80492f1:	55                   	push   %ebp
 80492f2:	57                   	push   %edi
 80492f3:	56                   	push   %esi
 80492f4:	53                   	push   %ebx
 80492f5:	83 ec 2c             	sub    $0x2c,%esp
 80492f8:	89 d7                	mov    %edx,%edi
 80492fa:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 80492fe:	65 8b 15 14 00 00 00 	mov    %gs:0x14,%edx
 8049305:	89 54 24 1c          	mov    %edx,0x1c(%esp)
 8049309:	31 d2                	xor    %edx,%edx
 804930b:	83 f9 01             	cmp    $0x1,%ecx
 804930e:	76 79                	jbe    8049389 <rio_readlineb+0x98>
 8049310:	89 c3                	mov    %eax,%ebx
 8049312:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 8049316:	bd 01 00 00 00       	mov    $0x1,%ebp
 804931b:	8d 73 0c             	lea    0xc(%ebx),%esi
 804931e:	eb 2d                	jmp    804934d <rio_readlineb+0x5c>
 8049320:	83 ec 04             	sub    $0x4,%esp
 8049323:	68 00 20 00 00       	push   $0x2000
 8049328:	56                   	push   %esi
 8049329:	ff 33                	pushl  (%ebx)
 804932b:	e8 00 f4 ff ff       	call   8048730 <read@plt>
 8049330:	89 43 04             	mov    %eax,0x4(%ebx)
 8049333:	83 c4 10             	add    $0x10,%esp
 8049336:	85 c0                	test   %eax,%eax
 8049338:	79 0c                	jns    8049346 <rio_readlineb+0x55>
 804933a:	e8 f1 f4 ff ff       	call   8048830 <__errno_location@plt>
 804933f:	83 38 04             	cmpl   $0x4,(%eax)
 8049342:	74 09                	je     804934d <rio_readlineb+0x5c>
 8049344:	eb 62                	jmp    80493a8 <rio_readlineb+0xb7>
 8049346:	85 c0                	test   %eax,%eax
 8049348:	74 63                	je     80493ad <rio_readlineb+0xbc>
 804934a:	89 73 08             	mov    %esi,0x8(%ebx)
 804934d:	8b 43 04             	mov    0x4(%ebx),%eax
 8049350:	85 c0                	test   %eax,%eax
 8049352:	7e cc                	jle    8049320 <rio_readlineb+0x2f>
 8049354:	8b 4b 08             	mov    0x8(%ebx),%ecx
 8049357:	0f b6 11             	movzbl (%ecx),%edx
 804935a:	88 54 24 1b          	mov    %dl,0x1b(%esp)
 804935e:	83 c1 01             	add    $0x1,%ecx
 8049361:	89 4b 08             	mov    %ecx,0x8(%ebx)
 8049364:	83 e8 01             	sub    $0x1,%eax
 8049367:	89 43 04             	mov    %eax,0x4(%ebx)
 804936a:	83 c7 01             	add    $0x1,%edi
 804936d:	88 57 ff             	mov    %dl,-0x1(%edi)
 8049370:	80 fa 0a             	cmp    $0xa,%dl
 8049373:	75 09                	jne    804937e <rio_readlineb+0x8d>
 8049375:	eb 1d                	jmp    8049394 <rio_readlineb+0xa3>
 8049377:	83 fd 01             	cmp    $0x1,%ebp
 804937a:	75 18                	jne    8049394 <rio_readlineb+0xa3>
 804937c:	eb 1b                	jmp    8049399 <rio_readlineb+0xa8>
 804937e:	83 c5 01             	add    $0x1,%ebp
 8049381:	3b 6c 24 08          	cmp    0x8(%esp),%ebp
 8049385:	74 09                	je     8049390 <rio_readlineb+0x9f>
 8049387:	eb c4                	jmp    804934d <rio_readlineb+0x5c>
 8049389:	bd 01 00 00 00       	mov    $0x1,%ebp
 804938e:	eb 04                	jmp    8049394 <rio_readlineb+0xa3>
 8049390:	8b 6c 24 0c          	mov    0xc(%esp),%ebp
 8049394:	c6 07 00             	movb   $0x0,(%edi)
 8049397:	89 e8                	mov    %ebp,%eax
 8049399:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 804939d:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80493a4:	74 17                	je     80493bd <rio_readlineb+0xcc>
 80493a6:	eb 10                	jmp    80493b8 <rio_readlineb+0xc7>
 80493a8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80493ad:	85 c0                	test   %eax,%eax
 80493af:	74 c6                	je     8049377 <rio_readlineb+0x86>
 80493b1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80493b6:	eb e1                	jmp    8049399 <rio_readlineb+0xa8>
 80493b8:	e8 d3 f3 ff ff       	call   8048790 <__stack_chk_fail@plt>
 80493bd:	83 c4 2c             	add    $0x2c,%esp
 80493c0:	5b                   	pop    %ebx
 80493c1:	5e                   	pop    %esi
 80493c2:	5f                   	pop    %edi
 80493c3:	5d                   	pop    %ebp
 80493c4:	c3                   	ret    

080493c5 <submitr>:
 80493c5:	55                   	push   %ebp
 80493c6:	57                   	push   %edi
 80493c7:	56                   	push   %esi
 80493c8:	53                   	push   %ebx
 80493c9:	81 ec 60 a0 00 00    	sub    $0xa060,%esp
 80493cf:	8b b4 24 74 a0 00 00 	mov    0xa074(%esp),%esi
 80493d6:	8b 84 24 7c a0 00 00 	mov    0xa07c(%esp),%eax
 80493dd:	89 44 24 10          	mov    %eax,0x10(%esp)
 80493e1:	8b 84 24 80 a0 00 00 	mov    0xa080(%esp),%eax
 80493e8:	89 44 24 14          	mov    %eax,0x14(%esp)
 80493ec:	8b 84 24 84 a0 00 00 	mov    0xa084(%esp),%eax
 80493f3:	89 44 24 18          	mov    %eax,0x18(%esp)
 80493f7:	8b 9c 24 88 a0 00 00 	mov    0xa088(%esp),%ebx
 80493fe:	8b 84 24 8c a0 00 00 	mov    0xa08c(%esp),%eax
 8049405:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 8049409:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804940f:	89 84 24 50 a0 00 00 	mov    %eax,0xa050(%esp)
 8049416:	31 c0                	xor    %eax,%eax
 8049418:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 804941f:	00 
 8049420:	6a 00                	push   $0x0
 8049422:	6a 01                	push   $0x1
 8049424:	6a 02                	push   $0x2
 8049426:	e8 25 f4 ff ff       	call   8048850 <socket@plt>
 804942b:	89 44 24 18          	mov    %eax,0x18(%esp)
 804942f:	83 c4 10             	add    $0x10,%esp
 8049432:	85 c0                	test   %eax,%eax
 8049434:	79 52                	jns    8049488 <submitr+0xc3>
 8049436:	8b 44 24 18          	mov    0x18(%esp),%eax
 804943a:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049440:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049447:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 804944e:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049455:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 804945c:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049463:	c7 40 18 63 72 65 61 	movl   $0x61657263,0x18(%eax)
 804946a:	c7 40 1c 74 65 20 73 	movl   $0x73206574,0x1c(%eax)
 8049471:	c7 40 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%eax)
 8049478:	66 c7 40 24 74 00    	movw   $0x74,0x24(%eax)
 804947e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049483:	e9 3f 06 00 00       	jmp    8049ac7 <submitr+0x702>
 8049488:	83 ec 0c             	sub    $0xc,%esp
 804948b:	56                   	push   %esi
 804948c:	e8 df f3 ff ff       	call   8048870 <gethostbyname@plt>
 8049491:	83 c4 10             	add    $0x10,%esp
 8049494:	85 c0                	test   %eax,%eax
 8049496:	75 73                	jne    804950b <submitr+0x146>
 8049498:	8b 44 24 18          	mov    0x18(%esp),%eax
 804949c:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 80494a2:	c7 40 04 72 3a 20 44 	movl   $0x44203a72,0x4(%eax)
 80494a9:	c7 40 08 4e 53 20 69 	movl   $0x6920534e,0x8(%eax)
 80494b0:	c7 40 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%eax)
 80494b7:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 80494be:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 80494c5:	c7 40 18 72 65 73 6f 	movl   $0x6f736572,0x18(%eax)
 80494cc:	c7 40 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%eax)
 80494d3:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 80494da:	c7 40 24 65 72 20 61 	movl   $0x61207265,0x24(%eax)
 80494e1:	c7 40 28 64 64 72 65 	movl   $0x65726464,0x28(%eax)
 80494e8:	66 c7 40 2c 73 73    	movw   $0x7373,0x2c(%eax)
 80494ee:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
 80494f2:	83 ec 0c             	sub    $0xc,%esp
 80494f5:	ff 74 24 14          	pushl  0x14(%esp)
 80494f9:	e8 a2 f3 ff ff       	call   80488a0 <close@plt>
 80494fe:	83 c4 10             	add    $0x10,%esp
 8049501:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049506:	e9 bc 05 00 00       	jmp    8049ac7 <submitr+0x702>
 804950b:	8d 74 24 30          	lea    0x30(%esp),%esi
 804950f:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 8049516:	00 
 8049517:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
 804951e:	00 
 804951f:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
 8049526:	00 
 8049527:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 804952e:	00 
 804952f:	66 c7 44 24 30 02 00 	movw   $0x2,0x30(%esp)
 8049536:	6a 0c                	push   $0xc
 8049538:	ff 70 0c             	pushl  0xc(%eax)
 804953b:	8b 40 10             	mov    0x10(%eax),%eax
 804953e:	ff 30                	pushl  (%eax)
 8049540:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049544:	50                   	push   %eax
 8049545:	e8 86 f2 ff ff       	call   80487d0 <__memmove_chk@plt>
 804954a:	0f b7 84 24 84 a0 00 	movzwl 0xa084(%esp),%eax
 8049551:	00 
 8049552:	66 c1 c8 08          	ror    $0x8,%ax
 8049556:	66 89 44 24 42       	mov    %ax,0x42(%esp)
 804955b:	83 c4 0c             	add    $0xc,%esp
 804955e:	6a 10                	push   $0x10
 8049560:	56                   	push   %esi
 8049561:	ff 74 24 14          	pushl  0x14(%esp)
 8049565:	e8 26 f3 ff ff       	call   8048890 <connect@plt>
 804956a:	83 c4 10             	add    $0x10,%esp
 804956d:	85 c0                	test   %eax,%eax
 804956f:	79 65                	jns    80495d6 <submitr+0x211>
 8049571:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049575:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 804957b:	c7 40 04 72 3a 20 55 	movl   $0x55203a72,0x4(%eax)
 8049582:	c7 40 08 6e 61 62 6c 	movl   $0x6c62616e,0x8(%eax)
 8049589:	c7 40 0c 65 20 74 6f 	movl   $0x6f742065,0xc(%eax)
 8049590:	c7 40 10 20 63 6f 6e 	movl   $0x6e6f6320,0x10(%eax)
 8049597:	c7 40 14 6e 65 63 74 	movl   $0x7463656e,0x14(%eax)
 804959e:	c7 40 18 20 74 6f 20 	movl   $0x206f7420,0x18(%eax)
 80495a5:	c7 40 1c 74 68 65 20 	movl   $0x20656874,0x1c(%eax)
 80495ac:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 80495b3:	66 c7 40 24 65 72    	movw   $0x7265,0x24(%eax)
 80495b9:	c6 40 26 00          	movb   $0x0,0x26(%eax)
 80495bd:	83 ec 0c             	sub    $0xc,%esp
 80495c0:	ff 74 24 14          	pushl  0x14(%esp)
 80495c4:	e8 d7 f2 ff ff       	call   80488a0 <close@plt>
 80495c9:	83 c4 10             	add    $0x10,%esp
 80495cc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80495d1:	e9 f1 04 00 00       	jmp    8049ac7 <submitr+0x702>
 80495d6:	be ff ff ff ff       	mov    $0xffffffff,%esi
 80495db:	b8 00 00 00 00       	mov    $0x0,%eax
 80495e0:	89 f1                	mov    %esi,%ecx
 80495e2:	89 df                	mov    %ebx,%edi
 80495e4:	f2 ae                	repnz scas %es:(%edi),%al
 80495e6:	f7 d1                	not    %ecx
 80495e8:	89 cd                	mov    %ecx,%ebp
 80495ea:	89 f1                	mov    %esi,%ecx
 80495ec:	8b 7c 24 0c          	mov    0xc(%esp),%edi
 80495f0:	f2 ae                	repnz scas %es:(%edi),%al
 80495f2:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
 80495f6:	89 f1                	mov    %esi,%ecx
 80495f8:	8b 7c 24 10          	mov    0x10(%esp),%edi
 80495fc:	f2 ae                	repnz scas %es:(%edi),%al
 80495fe:	89 ca                	mov    %ecx,%edx
 8049600:	f7 d2                	not    %edx
 8049602:	89 f1                	mov    %esi,%ecx
 8049604:	8b 7c 24 14          	mov    0x14(%esp),%edi
 8049608:	f2 ae                	repnz scas %es:(%edi),%al
 804960a:	2b 54 24 1c          	sub    0x1c(%esp),%edx
 804960e:	29 ca                	sub    %ecx,%edx
 8049610:	8d 44 6d fd          	lea    -0x3(%ebp,%ebp,2),%eax
 8049614:	8d 44 02 7b          	lea    0x7b(%edx,%eax,1),%eax
 8049618:	3d 00 20 00 00       	cmp    $0x2000,%eax
 804961d:	76 7e                	jbe    804969d <submitr+0x2d8>
 804961f:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049623:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049629:	c7 40 04 72 3a 20 52 	movl   $0x52203a72,0x4(%eax)
 8049630:	c7 40 08 65 73 75 6c 	movl   $0x6c757365,0x8(%eax)
 8049637:	c7 40 0c 74 20 73 74 	movl   $0x74732074,0xc(%eax)
 804963e:	c7 40 10 72 69 6e 67 	movl   $0x676e6972,0x10(%eax)
 8049645:	c7 40 14 20 74 6f 6f 	movl   $0x6f6f7420,0x14(%eax)
 804964c:	c7 40 18 20 6c 61 72 	movl   $0x72616c20,0x18(%eax)
 8049653:	c7 40 1c 67 65 2e 20 	movl   $0x202e6567,0x1c(%eax)
 804965a:	c7 40 20 49 6e 63 72 	movl   $0x72636e49,0x20(%eax)
 8049661:	c7 40 24 65 61 73 65 	movl   $0x65736165,0x24(%eax)
 8049668:	c7 40 28 20 53 55 42 	movl   $0x42555320,0x28(%eax)
 804966f:	c7 40 2c 4d 49 54 52 	movl   $0x5254494d,0x2c(%eax)
 8049676:	c7 40 30 5f 4d 41 58 	movl   $0x58414d5f,0x30(%eax)
 804967d:	c7 40 34 42 55 46 00 	movl   $0x465542,0x34(%eax)
 8049684:	83 ec 0c             	sub    $0xc,%esp
 8049687:	ff 74 24 14          	pushl  0x14(%esp)
 804968b:	e8 10 f2 ff ff       	call   80488a0 <close@plt>
 8049690:	83 c4 10             	add    $0x10,%esp
 8049693:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049698:	e9 2a 04 00 00       	jmp    8049ac7 <submitr+0x702>
 804969d:	8d 94 24 4c 40 00 00 	lea    0x404c(%esp),%edx
 80496a4:	b9 00 08 00 00       	mov    $0x800,%ecx
 80496a9:	b8 00 00 00 00       	mov    $0x0,%eax
 80496ae:	89 d7                	mov    %edx,%edi
 80496b0:	f3 ab                	rep stos %eax,%es:(%edi)
 80496b2:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 80496b7:	89 df                	mov    %ebx,%edi
 80496b9:	f2 ae                	repnz scas %es:(%edi),%al
 80496bb:	f7 d1                	not    %ecx
 80496bd:	89 ce                	mov    %ecx,%esi
 80496bf:	83 ee 01             	sub    $0x1,%esi
 80496c2:	0f 84 5c 04 00 00    	je     8049b24 <submitr+0x75f>
 80496c8:	89 d5                	mov    %edx,%ebp
 80496ca:	bf d9 ff 00 00       	mov    $0xffd9,%edi
 80496cf:	0f b6 13             	movzbl (%ebx),%edx
 80496d2:	8d 4a d6             	lea    -0x2a(%edx),%ecx
 80496d5:	b8 01 00 00 00       	mov    $0x1,%eax
 80496da:	80 f9 0f             	cmp    $0xf,%cl
 80496dd:	77 0a                	ja     80496e9 <submitr+0x324>
 80496df:	89 f8                	mov    %edi,%eax
 80496e1:	d3 e8                	shr    %cl,%eax
 80496e3:	83 f0 01             	xor    $0x1,%eax
 80496e6:	83 e0 01             	and    $0x1,%eax
 80496e9:	80 fa 5f             	cmp    $0x5f,%dl
 80496ec:	0f 94 c1             	sete   %cl
 80496ef:	38 c1                	cmp    %al,%cl
 80496f1:	73 0c                	jae    80496ff <submitr+0x33a>
 80496f3:	89 d0                	mov    %edx,%eax
 80496f5:	83 e0 df             	and    $0xffffffdf,%eax
 80496f8:	83 e8 41             	sub    $0x41,%eax
 80496fb:	3c 19                	cmp    $0x19,%al
 80496fd:	77 08                	ja     8049707 <submitr+0x342>
 80496ff:	88 55 00             	mov    %dl,0x0(%ebp)
 8049702:	8d 6d 01             	lea    0x1(%ebp),%ebp
 8049705:	eb 62                	jmp    8049769 <submitr+0x3a4>
 8049707:	80 fa 20             	cmp    $0x20,%dl
 804970a:	75 09                	jne    8049715 <submitr+0x350>
 804970c:	c6 45 00 2b          	movb   $0x2b,0x0(%ebp)
 8049710:	8d 6d 01             	lea    0x1(%ebp),%ebp
 8049713:	eb 54                	jmp    8049769 <submitr+0x3a4>
 8049715:	8d 42 e0             	lea    -0x20(%edx),%eax
 8049718:	3c 5f                	cmp    $0x5f,%al
 804971a:	76 09                	jbe    8049725 <submitr+0x360>
 804971c:	80 fa 09             	cmp    $0x9,%dl
 804971f:	0f 85 bb 03 00 00    	jne    8049ae0 <submitr+0x71b>
 8049725:	83 ec 0c             	sub    $0xc,%esp
 8049728:	0f b6 d2             	movzbl %dl,%edx
 804972b:	52                   	push   %edx
 804972c:	68 24 a3 04 08       	push   $0x804a324
 8049731:	6a 08                	push   $0x8
 8049733:	6a 01                	push   $0x1
 8049735:	8d 84 24 68 80 00 00 	lea    0x8068(%esp),%eax
 804973c:	50                   	push   %eax
 804973d:	e8 7e f1 ff ff       	call   80488c0 <__sprintf_chk@plt>
 8049742:	0f b6 84 24 6c 80 00 	movzbl 0x806c(%esp),%eax
 8049749:	00 
 804974a:	88 45 00             	mov    %al,0x0(%ebp)
 804974d:	0f b6 84 24 6d 80 00 	movzbl 0x806d(%esp),%eax
 8049754:	00 
 8049755:	88 45 01             	mov    %al,0x1(%ebp)
 8049758:	0f b6 84 24 6e 80 00 	movzbl 0x806e(%esp),%eax
 804975f:	00 
 8049760:	88 45 02             	mov    %al,0x2(%ebp)
 8049763:	83 c4 20             	add    $0x20,%esp
 8049766:	8d 6d 03             	lea    0x3(%ebp),%ebp
 8049769:	83 c3 01             	add    $0x1,%ebx
 804976c:	83 ee 01             	sub    $0x1,%esi
 804976f:	0f 85 5a ff ff ff    	jne    80496cf <submitr+0x30a>
 8049775:	e9 aa 03 00 00       	jmp    8049b24 <submitr+0x75f>
 804977a:	83 ec 04             	sub    $0x4,%esp
 804977d:	53                   	push   %ebx
 804977e:	56                   	push   %esi
 804977f:	55                   	push   %ebp
 8049780:	e8 7b f0 ff ff       	call   8048800 <write@plt>
 8049785:	83 c4 10             	add    $0x10,%esp
 8049788:	85 c0                	test   %eax,%eax
 804978a:	7f 0f                	jg     804979b <submitr+0x3d6>
 804978c:	e8 9f f0 ff ff       	call   8048830 <__errno_location@plt>
 8049791:	83 38 04             	cmpl   $0x4,(%eax)
 8049794:	75 0f                	jne    80497a5 <submitr+0x3e0>
 8049796:	b8 00 00 00 00       	mov    $0x0,%eax
 804979b:	01 c6                	add    %eax,%esi
 804979d:	29 c3                	sub    %eax,%ebx
 804979f:	75 d9                	jne    804977a <submitr+0x3b5>
 80497a1:	85 ff                	test   %edi,%edi
 80497a3:	79 69                	jns    804980e <submitr+0x449>
 80497a5:	8b 44 24 18          	mov    0x18(%esp),%eax
 80497a9:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 80497af:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 80497b6:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 80497bd:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 80497c4:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 80497cb:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 80497d2:	c7 40 18 77 72 69 74 	movl   $0x74697277,0x18(%eax)
 80497d9:	c7 40 1c 65 20 74 6f 	movl   $0x6f742065,0x1c(%eax)
 80497e0:	c7 40 20 20 74 68 65 	movl   $0x65687420,0x20(%eax)
 80497e7:	c7 40 24 20 73 65 72 	movl   $0x72657320,0x24(%eax)
 80497ee:	c7 40 28 76 65 72 00 	movl   $0x726576,0x28(%eax)
 80497f5:	83 ec 0c             	sub    $0xc,%esp
 80497f8:	ff 74 24 14          	pushl  0x14(%esp)
 80497fc:	e8 9f f0 ff ff       	call   80488a0 <close@plt>
 8049801:	83 c4 10             	add    $0x10,%esp
 8049804:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049809:	e9 b9 02 00 00       	jmp    8049ac7 <submitr+0x702>
 804980e:	8b 44 24 08          	mov    0x8(%esp),%eax
 8049812:	89 44 24 40          	mov    %eax,0x40(%esp)
 8049816:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%esp)
 804981d:	00 
 804981e:	8d 44 24 4c          	lea    0x4c(%esp),%eax
 8049822:	89 44 24 48          	mov    %eax,0x48(%esp)
 8049826:	b9 00 20 00 00       	mov    $0x2000,%ecx
 804982b:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049832:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049836:	e8 b6 fa ff ff       	call   80492f1 <rio_readlineb>
 804983b:	85 c0                	test   %eax,%eax
 804983d:	7f 7d                	jg     80498bc <submitr+0x4f7>
 804983f:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049843:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049849:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049850:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049857:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 804985e:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049865:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 804986c:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049873:	c7 40 1c 20 66 69 72 	movl   $0x72696620,0x1c(%eax)
 804987a:	c7 40 20 73 74 20 68 	movl   $0x68207473,0x20(%eax)
 8049881:	c7 40 24 65 61 64 65 	movl   $0x65646165,0x24(%eax)
 8049888:	c7 40 28 72 20 66 72 	movl   $0x72662072,0x28(%eax)
 804988f:	c7 40 2c 6f 6d 20 73 	movl   $0x73206d6f,0x2c(%eax)
 8049896:	c7 40 30 65 72 76 65 	movl   $0x65767265,0x30(%eax)
 804989d:	66 c7 40 34 72 00    	movw   $0x72,0x34(%eax)
 80498a3:	83 ec 0c             	sub    $0xc,%esp
 80498a6:	ff 74 24 14          	pushl  0x14(%esp)
 80498aa:	e8 f1 ef ff ff       	call   80488a0 <close@plt>
 80498af:	83 c4 10             	add    $0x10,%esp
 80498b2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80498b7:	e9 0b 02 00 00       	jmp    8049ac7 <submitr+0x702>
 80498bc:	83 ec 0c             	sub    $0xc,%esp
 80498bf:	8d 84 24 58 80 00 00 	lea    0x8058(%esp),%eax
 80498c6:	50                   	push   %eax
 80498c7:	8d 44 24 3c          	lea    0x3c(%esp),%eax
 80498cb:	50                   	push   %eax
 80498cc:	8d 84 24 60 60 00 00 	lea    0x6060(%esp),%eax
 80498d3:	50                   	push   %eax
 80498d4:	68 2b a3 04 08       	push   $0x804a32b
 80498d9:	8d 84 24 68 20 00 00 	lea    0x2068(%esp),%eax
 80498e0:	50                   	push   %eax
 80498e1:	e8 2a ef ff ff       	call   8048810 <__isoc99_sscanf@plt>
 80498e6:	8b 44 24 4c          	mov    0x4c(%esp),%eax
 80498ea:	83 c4 20             	add    $0x20,%esp
 80498ed:	3d c8 00 00 00       	cmp    $0xc8,%eax
 80498f2:	0f 84 c4 00 00 00    	je     80499bc <submitr+0x5f7>
 80498f8:	83 ec 08             	sub    $0x8,%esp
 80498fb:	8d 94 24 54 80 00 00 	lea    0x8054(%esp),%edx
 8049902:	52                   	push   %edx
 8049903:	50                   	push   %eax
 8049904:	68 3c a2 04 08       	push   $0x804a23c
 8049909:	6a ff                	push   $0xffffffff
 804990b:	6a 01                	push   $0x1
 804990d:	ff 74 24 34          	pushl  0x34(%esp)
 8049911:	e8 aa ef ff ff       	call   80488c0 <__sprintf_chk@plt>
 8049916:	83 c4 14             	add    $0x14,%esp
 8049919:	ff 74 24 14          	pushl  0x14(%esp)
 804991d:	e8 7e ef ff ff       	call   80488a0 <close@plt>
 8049922:	83 c4 10             	add    $0x10,%esp
 8049925:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804992a:	e9 98 01 00 00       	jmp    8049ac7 <submitr+0x702>
 804992f:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049934:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 804993b:	8d 44 24 40          	lea    0x40(%esp),%eax
 804993f:	e8 ad f9 ff ff       	call   80492f1 <rio_readlineb>
 8049944:	85 c0                	test   %eax,%eax
 8049946:	7f 74                	jg     80499bc <submitr+0x5f7>
 8049948:	8b 44 24 18          	mov    0x18(%esp),%eax
 804994c:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049952:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049959:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049960:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049967:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 804996e:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049975:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 804997c:	c7 40 1c 20 68 65 61 	movl   $0x61656820,0x1c(%eax)
 8049983:	c7 40 20 64 65 72 73 	movl   $0x73726564,0x20(%eax)
 804998a:	c7 40 24 20 66 72 6f 	movl   $0x6f726620,0x24(%eax)
 8049991:	c7 40 28 6d 20 73 65 	movl   $0x6573206d,0x28(%eax)
 8049998:	c7 40 2c 72 76 65 72 	movl   $0x72657672,0x2c(%eax)
 804999f:	c6 40 30 00          	movb   $0x0,0x30(%eax)
 80499a3:	83 ec 0c             	sub    $0xc,%esp
 80499a6:	ff 74 24 14          	pushl  0x14(%esp)
 80499aa:	e8 f1 ee ff ff       	call   80488a0 <close@plt>
 80499af:	83 c4 10             	add    $0x10,%esp
 80499b2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80499b7:	e9 0b 01 00 00       	jmp    8049ac7 <submitr+0x702>
 80499bc:	80 bc 24 4c 20 00 00 	cmpb   $0xd,0x204c(%esp)
 80499c3:	0d 
 80499c4:	0f 85 65 ff ff ff    	jne    804992f <submitr+0x56a>
 80499ca:	80 bc 24 4d 20 00 00 	cmpb   $0xa,0x204d(%esp)
 80499d1:	0a 
 80499d2:	0f 85 57 ff ff ff    	jne    804992f <submitr+0x56a>
 80499d8:	80 bc 24 4e 20 00 00 	cmpb   $0x0,0x204e(%esp)
 80499df:	00 
 80499e0:	0f 85 49 ff ff ff    	jne    804992f <submitr+0x56a>
 80499e6:	b9 00 20 00 00       	mov    $0x2000,%ecx
 80499eb:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 80499f2:	8d 44 24 40          	lea    0x40(%esp),%eax
 80499f6:	e8 f6 f8 ff ff       	call   80492f1 <rio_readlineb>
 80499fb:	85 c0                	test   %eax,%eax
 80499fd:	7f 7b                	jg     8049a7a <submitr+0x6b5>
 80499ff:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049a03:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049a09:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049a10:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049a17:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049a1e:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049a25:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049a2c:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049a33:	c7 40 1c 20 73 74 61 	movl   $0x61747320,0x1c(%eax)
 8049a3a:	c7 40 20 74 75 73 20 	movl   $0x20737574,0x20(%eax)
 8049a41:	c7 40 24 6d 65 73 73 	movl   $0x7373656d,0x24(%eax)
 8049a48:	c7 40 28 61 67 65 20 	movl   $0x20656761,0x28(%eax)
 8049a4f:	c7 40 2c 66 72 6f 6d 	movl   $0x6d6f7266,0x2c(%eax)
 8049a56:	c7 40 30 20 73 65 72 	movl   $0x72657320,0x30(%eax)
 8049a5d:	c7 40 34 76 65 72 00 	movl   $0x726576,0x34(%eax)
 8049a64:	83 ec 0c             	sub    $0xc,%esp
 8049a67:	ff 74 24 14          	pushl  0x14(%esp)
 8049a6b:	e8 30 ee ff ff       	call   80488a0 <close@plt>
 8049a70:	83 c4 10             	add    $0x10,%esp
 8049a73:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049a78:	eb 4d                	jmp    8049ac7 <submitr+0x702>
 8049a7a:	83 ec 08             	sub    $0x8,%esp
 8049a7d:	8d 84 24 54 20 00 00 	lea    0x2054(%esp),%eax
 8049a84:	50                   	push   %eax
 8049a85:	8b 7c 24 24          	mov    0x24(%esp),%edi
 8049a89:	57                   	push   %edi
 8049a8a:	e8 11 ed ff ff       	call   80487a0 <strcpy@plt>
 8049a8f:	83 c4 04             	add    $0x4,%esp
 8049a92:	ff 74 24 14          	pushl  0x14(%esp)
 8049a96:	e8 05 ee ff ff       	call   80488a0 <close@plt>
 8049a9b:	0f b6 17             	movzbl (%edi),%edx
 8049a9e:	b8 4f 00 00 00       	mov    $0x4f,%eax
 8049aa3:	83 c4 10             	add    $0x10,%esp
 8049aa6:	29 d0                	sub    %edx,%eax
 8049aa8:	75 13                	jne    8049abd <submitr+0x6f8>
 8049aaa:	0f b6 57 01          	movzbl 0x1(%edi),%edx
 8049aae:	b8 4b 00 00 00       	mov    $0x4b,%eax
 8049ab3:	29 d0                	sub    %edx,%eax
 8049ab5:	75 06                	jne    8049abd <submitr+0x6f8>
 8049ab7:	0f b6 47 02          	movzbl 0x2(%edi),%eax
 8049abb:	f7 d8                	neg    %eax
 8049abd:	85 c0                	test   %eax,%eax
 8049abf:	0f 95 c0             	setne  %al
 8049ac2:	0f b6 c0             	movzbl %al,%eax
 8049ac5:	f7 d8                	neg    %eax
 8049ac7:	8b bc 24 4c a0 00 00 	mov    0xa04c(%esp),%edi
 8049ace:	65 33 3d 14 00 00 00 	xor    %gs:0x14,%edi
 8049ad5:	0f 84 a9 00 00 00    	je     8049b84 <submitr+0x7bf>
 8049adb:	e9 9f 00 00 00       	jmp    8049b7f <submitr+0x7ba>
 8049ae0:	a1 6c a2 04 08       	mov    0x804a26c,%eax
 8049ae5:	8b 7c 24 18          	mov    0x18(%esp),%edi
 8049ae9:	89 07                	mov    %eax,(%edi)
 8049aeb:	a1 ab a2 04 08       	mov    0x804a2ab,%eax
 8049af0:	89 47 3f             	mov    %eax,0x3f(%edi)
 8049af3:	89 f8                	mov    %edi,%eax
 8049af5:	83 c7 04             	add    $0x4,%edi
 8049af8:	83 e7 fc             	and    $0xfffffffc,%edi
 8049afb:	29 f8                	sub    %edi,%eax
 8049afd:	be 6c a2 04 08       	mov    $0x804a26c,%esi
 8049b02:	29 c6                	sub    %eax,%esi
 8049b04:	83 c0 43             	add    $0x43,%eax
 8049b07:	c1 e8 02             	shr    $0x2,%eax
 8049b0a:	89 c1                	mov    %eax,%ecx
 8049b0c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8049b0e:	83 ec 0c             	sub    $0xc,%esp
 8049b11:	ff 74 24 14          	pushl  0x14(%esp)
 8049b15:	e8 86 ed ff ff       	call   80488a0 <close@plt>
 8049b1a:	83 c4 10             	add    $0x10,%esp
 8049b1d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049b22:	eb a3                	jmp    8049ac7 <submitr+0x702>
 8049b24:	8d 84 24 4c 40 00 00 	lea    0x404c(%esp),%eax
 8049b2b:	50                   	push   %eax
 8049b2c:	ff 74 24 18          	pushl  0x18(%esp)
 8049b30:	ff 74 24 18          	pushl  0x18(%esp)
 8049b34:	ff 74 24 18          	pushl  0x18(%esp)
 8049b38:	68 b0 a2 04 08       	push   $0x804a2b0
 8049b3d:	68 00 20 00 00       	push   $0x2000
 8049b42:	6a 01                	push   $0x1
 8049b44:	8d bc 24 68 20 00 00 	lea    0x2068(%esp),%edi
 8049b4b:	57                   	push   %edi
 8049b4c:	e8 6f ed ff ff       	call   80488c0 <__sprintf_chk@plt>
 8049b51:	b8 00 00 00 00       	mov    $0x0,%eax
 8049b56:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049b5b:	f2 ae                	repnz scas %es:(%edi),%al
 8049b5d:	f7 d1                	not    %ecx
 8049b5f:	8d 79 ff             	lea    -0x1(%ecx),%edi
 8049b62:	83 c4 20             	add    $0x20,%esp
 8049b65:	89 fb                	mov    %edi,%ebx
 8049b67:	8d b4 24 4c 20 00 00 	lea    0x204c(%esp),%esi
 8049b6e:	8b 6c 24 08          	mov    0x8(%esp),%ebp
 8049b72:	85 ff                	test   %edi,%edi
 8049b74:	0f 85 00 fc ff ff    	jne    804977a <submitr+0x3b5>
 8049b7a:	e9 8f fc ff ff       	jmp    804980e <submitr+0x449>
 8049b7f:	e8 0c ec ff ff       	call   8048790 <__stack_chk_fail@plt>
 8049b84:	81 c4 5c a0 00 00    	add    $0xa05c,%esp
 8049b8a:	5b                   	pop    %ebx
 8049b8b:	5e                   	pop    %esi
 8049b8c:	5f                   	pop    %edi
 8049b8d:	5d                   	pop    %ebp
 8049b8e:	c3                   	ret    

08049b8f <init_timeout>:
 8049b8f:	53                   	push   %ebx
 8049b90:	83 ec 08             	sub    $0x8,%esp
 8049b93:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8049b97:	85 db                	test   %ebx,%ebx
 8049b99:	74 24                	je     8049bbf <init_timeout+0x30>
 8049b9b:	83 ec 08             	sub    $0x8,%esp
 8049b9e:	68 ce 92 04 08       	push   $0x80492ce
 8049ba3:	6a 0e                	push   $0xe
 8049ba5:	e8 b6 eb ff ff       	call   8048760 <signal@plt>
 8049baa:	85 db                	test   %ebx,%ebx
 8049bac:	b8 00 00 00 00       	mov    $0x0,%eax
 8049bb1:	0f 48 d8             	cmovs  %eax,%ebx
 8049bb4:	89 1c 24             	mov    %ebx,(%esp)
 8049bb7:	e8 c4 eb ff ff       	call   8048780 <alarm@plt>
 8049bbc:	83 c4 10             	add    $0x10,%esp
 8049bbf:	83 c4 08             	add    $0x8,%esp
 8049bc2:	5b                   	pop    %ebx
 8049bc3:	c3                   	ret    

08049bc4 <init_driver>:
 8049bc4:	57                   	push   %edi
 8049bc5:	56                   	push   %esi
 8049bc6:	53                   	push   %ebx
 8049bc7:	83 ec 28             	sub    $0x28,%esp
 8049bca:	8b 74 24 38          	mov    0x38(%esp),%esi
 8049bce:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049bd4:	89 44 24 24          	mov    %eax,0x24(%esp)
 8049bd8:	31 c0                	xor    %eax,%eax
 8049bda:	6a 01                	push   $0x1
 8049bdc:	6a 0d                	push   $0xd
 8049bde:	e8 7d eb ff ff       	call   8048760 <signal@plt>
 8049be3:	83 c4 08             	add    $0x8,%esp
 8049be6:	6a 01                	push   $0x1
 8049be8:	6a 1d                	push   $0x1d
 8049bea:	e8 71 eb ff ff       	call   8048760 <signal@plt>
 8049bef:	83 c4 08             	add    $0x8,%esp
 8049bf2:	6a 01                	push   $0x1
 8049bf4:	6a 1d                	push   $0x1d
 8049bf6:	e8 65 eb ff ff       	call   8048760 <signal@plt>
 8049bfb:	83 c4 0c             	add    $0xc,%esp
 8049bfe:	6a 00                	push   $0x0
 8049c00:	6a 01                	push   $0x1
 8049c02:	6a 02                	push   $0x2
 8049c04:	e8 47 ec ff ff       	call   8048850 <socket@plt>
 8049c09:	83 c4 10             	add    $0x10,%esp
 8049c0c:	85 c0                	test   %eax,%eax
 8049c0e:	79 4e                	jns    8049c5e <init_driver+0x9a>
 8049c10:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 8049c16:	c7 46 04 72 3a 20 43 	movl   $0x43203a72,0x4(%esi)
 8049c1d:	c7 46 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%esi)
 8049c24:	c7 46 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%esi)
 8049c2b:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 8049c32:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 8049c39:	c7 46 18 63 72 65 61 	movl   $0x61657263,0x18(%esi)
 8049c40:	c7 46 1c 74 65 20 73 	movl   $0x73206574,0x1c(%esi)
 8049c47:	c7 46 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%esi)
 8049c4e:	66 c7 46 24 74 00    	movw   $0x74,0x24(%esi)
 8049c54:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049c59:	e9 1f 01 00 00       	jmp    8049d7d <init_driver+0x1b9>
 8049c5e:	89 c3                	mov    %eax,%ebx
 8049c60:	83 ec 0c             	sub    $0xc,%esp
 8049c63:	68 3c a3 04 08       	push   $0x804a33c
 8049c68:	e8 03 ec ff ff       	call   8048870 <gethostbyname@plt>
 8049c6d:	83 c4 10             	add    $0x10,%esp
 8049c70:	85 c0                	test   %eax,%eax
 8049c72:	75 6c                	jne    8049ce0 <init_driver+0x11c>
 8049c74:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 8049c7a:	c7 46 04 72 3a 20 44 	movl   $0x44203a72,0x4(%esi)
 8049c81:	c7 46 08 4e 53 20 69 	movl   $0x6920534e,0x8(%esi)
 8049c88:	c7 46 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%esi)
 8049c8f:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 8049c96:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 8049c9d:	c7 46 18 72 65 73 6f 	movl   $0x6f736572,0x18(%esi)
 8049ca4:	c7 46 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%esi)
 8049cab:	c7 46 20 73 65 72 76 	movl   $0x76726573,0x20(%esi)
 8049cb2:	c7 46 24 65 72 20 61 	movl   $0x61207265,0x24(%esi)
 8049cb9:	c7 46 28 64 64 72 65 	movl   $0x65726464,0x28(%esi)
 8049cc0:	66 c7 46 2c 73 73    	movw   $0x7373,0x2c(%esi)
 8049cc6:	c6 46 2e 00          	movb   $0x0,0x2e(%esi)
 8049cca:	83 ec 0c             	sub    $0xc,%esp
 8049ccd:	53                   	push   %ebx
 8049cce:	e8 cd eb ff ff       	call   80488a0 <close@plt>
 8049cd3:	83 c4 10             	add    $0x10,%esp
 8049cd6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049cdb:	e9 9d 00 00 00       	jmp    8049d7d <init_driver+0x1b9>
 8049ce0:	8d 7c 24 0c          	lea    0xc(%esp),%edi
 8049ce4:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8049ceb:	00 
 8049cec:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8049cf3:	00 
 8049cf4:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8049cfb:	00 
 8049cfc:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8049d03:	00 
 8049d04:	66 c7 44 24 0c 02 00 	movw   $0x2,0xc(%esp)
 8049d0b:	6a 0c                	push   $0xc
 8049d0d:	ff 70 0c             	pushl  0xc(%eax)
 8049d10:	8b 40 10             	mov    0x10(%eax),%eax
 8049d13:	ff 30                	pushl  (%eax)
 8049d15:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8049d19:	50                   	push   %eax
 8049d1a:	e8 b1 ea ff ff       	call   80487d0 <__memmove_chk@plt>
 8049d1f:	66 c7 44 24 1e 3b 6e 	movw   $0x6e3b,0x1e(%esp)
 8049d26:	83 c4 0c             	add    $0xc,%esp
 8049d29:	6a 10                	push   $0x10
 8049d2b:	57                   	push   %edi
 8049d2c:	53                   	push   %ebx
 8049d2d:	e8 5e eb ff ff       	call   8048890 <connect@plt>
 8049d32:	83 c4 10             	add    $0x10,%esp
 8049d35:	85 c0                	test   %eax,%eax
 8049d37:	79 2a                	jns    8049d63 <init_driver+0x19f>
 8049d39:	83 ec 0c             	sub    $0xc,%esp
 8049d3c:	68 3c a3 04 08       	push   $0x804a33c
 8049d41:	68 fc a2 04 08       	push   $0x804a2fc
 8049d46:	6a ff                	push   $0xffffffff
 8049d48:	6a 01                	push   $0x1
 8049d4a:	56                   	push   %esi
 8049d4b:	e8 70 eb ff ff       	call   80488c0 <__sprintf_chk@plt>
 8049d50:	83 c4 14             	add    $0x14,%esp
 8049d53:	53                   	push   %ebx
 8049d54:	e8 47 eb ff ff       	call   80488a0 <close@plt>
 8049d59:	83 c4 10             	add    $0x10,%esp
 8049d5c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049d61:	eb 1a                	jmp    8049d7d <init_driver+0x1b9>
 8049d63:	83 ec 0c             	sub    $0xc,%esp
 8049d66:	53                   	push   %ebx
 8049d67:	e8 34 eb ff ff       	call   80488a0 <close@plt>
 8049d6c:	66 c7 06 4f 4b       	movw   $0x4b4f,(%esi)
 8049d71:	c6 46 02 00          	movb   $0x0,0x2(%esi)
 8049d75:	83 c4 10             	add    $0x10,%esp
 8049d78:	b8 00 00 00 00       	mov    $0x0,%eax
 8049d7d:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 8049d81:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8049d88:	74 05                	je     8049d8f <init_driver+0x1cb>
 8049d8a:	e8 01 ea ff ff       	call   8048790 <__stack_chk_fail@plt>
 8049d8f:	83 c4 20             	add    $0x20,%esp
 8049d92:	5b                   	pop    %ebx
 8049d93:	5e                   	pop    %esi
 8049d94:	5f                   	pop    %edi
 8049d95:	c3                   	ret    

08049d96 <driver_post>:
 8049d96:	53                   	push   %ebx
 8049d97:	83 ec 08             	sub    $0x8,%esp
 8049d9a:	8b 44 24 10          	mov    0x10(%esp),%eax
 8049d9e:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
 8049da2:	83 7c 24 18 00       	cmpl   $0x0,0x18(%esp)
 8049da7:	74 26                	je     8049dcf <driver_post+0x39>
 8049da9:	83 ec 04             	sub    $0x4,%esp
 8049dac:	ff 74 24 18          	pushl  0x18(%esp)
 8049db0:	68 4a a3 04 08       	push   $0x804a34a
 8049db5:	6a 01                	push   $0x1
 8049db7:	e8 84 ea ff ff       	call   8048840 <__printf_chk@plt>
 8049dbc:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 8049dc1:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 8049dc5:	83 c4 10             	add    $0x10,%esp
 8049dc8:	b8 00 00 00 00       	mov    $0x0,%eax
 8049dcd:	eb 3e                	jmp    8049e0d <driver_post+0x77>
 8049dcf:	85 c0                	test   %eax,%eax
 8049dd1:	74 2c                	je     8049dff <driver_post+0x69>
 8049dd3:	80 38 00             	cmpb   $0x0,(%eax)
 8049dd6:	74 27                	je     8049dff <driver_post+0x69>
 8049dd8:	83 ec 04             	sub    $0x4,%esp
 8049ddb:	53                   	push   %ebx
 8049ddc:	ff 74 24 1c          	pushl  0x1c(%esp)
 8049de0:	68 61 a3 04 08       	push   $0x804a361
 8049de5:	50                   	push   %eax
 8049de6:	68 69 a3 04 08       	push   $0x804a369
 8049deb:	68 6e 3b 00 00       	push   $0x3b6e
 8049df0:	68 3c a3 04 08       	push   $0x804a33c
 8049df5:	e8 cb f5 ff ff       	call   80493c5 <submitr>
 8049dfa:	83 c4 20             	add    $0x20,%esp
 8049dfd:	eb 0e                	jmp    8049e0d <driver_post+0x77>
 8049dff:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 8049e04:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 8049e08:	b8 00 00 00 00       	mov    $0x0,%eax
 8049e0d:	83 c4 08             	add    $0x8,%esp
 8049e10:	5b                   	pop    %ebx
 8049e11:	c3                   	ret    
 8049e12:	66 90                	xchg   %ax,%ax
 8049e14:	66 90                	xchg   %ax,%ax
 8049e16:	66 90                	xchg   %ax,%ax
 8049e18:	66 90                	xchg   %ax,%ax
 8049e1a:	66 90                	xchg   %ax,%ax
 8049e1c:	66 90                	xchg   %ax,%ax
 8049e1e:	66 90                	xchg   %ax,%ax

08049e20 <__libc_csu_init>:
 8049e20:	55                   	push   %ebp
 8049e21:	57                   	push   %edi
 8049e22:	56                   	push   %esi
 8049e23:	53                   	push   %ebx
 8049e24:	e8 e7 ea ff ff       	call   8048910 <__x86.get_pc_thunk.bx>
 8049e29:	81 c3 d7 21 00 00    	add    $0x21d7,%ebx
 8049e2f:	83 ec 0c             	sub    $0xc,%esp
 8049e32:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 8049e36:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 8049e3c:	e8 b3 e8 ff ff       	call   80486f4 <_init>
 8049e41:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8049e47:	29 c6                	sub    %eax,%esi
 8049e49:	c1 fe 02             	sar    $0x2,%esi
 8049e4c:	85 f6                	test   %esi,%esi
 8049e4e:	74 25                	je     8049e75 <__libc_csu_init+0x55>
 8049e50:	31 ff                	xor    %edi,%edi
 8049e52:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8049e58:	83 ec 04             	sub    $0x4,%esp
 8049e5b:	ff 74 24 2c          	pushl  0x2c(%esp)
 8049e5f:	ff 74 24 2c          	pushl  0x2c(%esp)
 8049e63:	55                   	push   %ebp
 8049e64:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8049e6b:	83 c7 01             	add    $0x1,%edi
 8049e6e:	83 c4 10             	add    $0x10,%esp
 8049e71:	39 f7                	cmp    %esi,%edi
 8049e73:	75 e3                	jne    8049e58 <__libc_csu_init+0x38>
 8049e75:	83 c4 0c             	add    $0xc,%esp
 8049e78:	5b                   	pop    %ebx
 8049e79:	5e                   	pop    %esi
 8049e7a:	5f                   	pop    %edi
 8049e7b:	5d                   	pop    %ebp
 8049e7c:	c3                   	ret    
 8049e7d:	8d 76 00             	lea    0x0(%esi),%esi

08049e80 <__libc_csu_fini>:
 8049e80:	f3 c3                	repz ret 

Disassembly of section .fini:

08049e84 <_fini>:
 8049e84:	53                   	push   %ebx
 8049e85:	83 ec 08             	sub    $0x8,%esp
 8049e88:	e8 83 ea ff ff       	call   8048910 <__x86.get_pc_thunk.bx>
 8049e8d:	81 c3 73 21 00 00    	add    $0x2173,%ebx
 8049e93:	83 c4 08             	add    $0x8,%esp
 8049e96:	5b                   	pop    %ebx
 8049e97:	c3                   	ret    
